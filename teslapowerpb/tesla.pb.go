// Tesla Protocol Buffer definition (tesla.proto)
//
// Create tesla.pb.go for use in Go programs using the protoc compiler:
//
// protoc --proto_path=.. --go_out=. --go_opt=paths=source_relative tesla.proto
//
// Credit and thanks to @brianhealey and @jasonacox for providing the
// python version of this file in github.com/jasonacox/pypowerwall.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: tesla.proto

package teslapowerpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExternalAuthType int32

const (
	ExternalAuthType_EXTERNAL_AUTH_TYPE_INVALID        ExternalAuthType = 0
	ExternalAuthType_EXTERNAL_AUTH_TYPE_PRESENCE       ExternalAuthType = 1
	ExternalAuthType_EXTERNAL_AUTH_TYPE_MTLS           ExternalAuthType = 2
	ExternalAuthType_EXTERNAL_AUTH_TYPE_HERMES_COMMAND ExternalAuthType = 4
)

// Enum value maps for ExternalAuthType.
var (
	ExternalAuthType_name = map[int32]string{
		0: "EXTERNAL_AUTH_TYPE_INVALID",
		1: "EXTERNAL_AUTH_TYPE_PRESENCE",
		2: "EXTERNAL_AUTH_TYPE_MTLS",
		4: "EXTERNAL_AUTH_TYPE_HERMES_COMMAND",
	}
	ExternalAuthType_value = map[string]int32{
		"EXTERNAL_AUTH_TYPE_INVALID":        0,
		"EXTERNAL_AUTH_TYPE_PRESENCE":       1,
		"EXTERNAL_AUTH_TYPE_MTLS":           2,
		"EXTERNAL_AUTH_TYPE_HERMES_COMMAND": 4,
	}
)

func (x ExternalAuthType) Enum() *ExternalAuthType {
	p := new(ExternalAuthType)
	*p = x
	return p
}

func (x ExternalAuthType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExternalAuthType) Descriptor() protoreflect.EnumDescriptor {
	return file_tesla_proto_enumTypes[0].Descriptor()
}

func (ExternalAuthType) Type() protoreflect.EnumType {
	return &file_tesla_proto_enumTypes[0]
}

func (x ExternalAuthType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExternalAuthType.Descriptor instead.
func (ExternalAuthType) EnumDescriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{0}
}

type DeliveryChannel int32

const (
	DeliveryChannel_DELIVERY_CHANNEL_INVALID        DeliveryChannel = 0
	DeliveryChannel_DELIVERY_CHANNEL_LOCAL_HTTPS    DeliveryChannel = 1
	DeliveryChannel_DELIVERY_CHANNEL_HERMES_COMMAND DeliveryChannel = 2
	DeliveryChannel_DELIVERY_CHANNEL_BLE            DeliveryChannel = 3
)

// Enum value maps for DeliveryChannel.
var (
	DeliveryChannel_name = map[int32]string{
		0: "DELIVERY_CHANNEL_INVALID",
		1: "DELIVERY_CHANNEL_LOCAL_HTTPS",
		2: "DELIVERY_CHANNEL_HERMES_COMMAND",
		3: "DELIVERY_CHANNEL_BLE",
	}
	DeliveryChannel_value = map[string]int32{
		"DELIVERY_CHANNEL_INVALID":        0,
		"DELIVERY_CHANNEL_LOCAL_HTTPS":    1,
		"DELIVERY_CHANNEL_HERMES_COMMAND": 2,
		"DELIVERY_CHANNEL_BLE":            3,
	}
)

func (x DeliveryChannel) Enum() *DeliveryChannel {
	p := new(DeliveryChannel)
	*p = x
	return p
}

func (x DeliveryChannel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeliveryChannel) Descriptor() protoreflect.EnumDescriptor {
	return file_tesla_proto_enumTypes[1].Descriptor()
}

func (DeliveryChannel) Type() protoreflect.EnumType {
	return &file_tesla_proto_enumTypes[1]
}

func (x DeliveryChannel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeliveryChannel.Descriptor instead.
func (DeliveryChannel) EnumDescriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{1}
}

type TeslaService int32

const (
	TeslaService_TESLA_SERVICE_INVALID TeslaService = 0
	TeslaService_TESLA_SERVICE_COMMAND TeslaService = 1
)

// Enum value maps for TeslaService.
var (
	TeslaService_name = map[int32]string{
		0: "TESLA_SERVICE_INVALID",
		1: "TESLA_SERVICE_COMMAND",
	}
	TeslaService_value = map[string]int32{
		"TESLA_SERVICE_INVALID": 0,
		"TESLA_SERVICE_COMMAND": 1,
	}
)

func (x TeslaService) Enum() *TeslaService {
	p := new(TeslaService)
	*p = x
	return p
}

func (x TeslaService) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TeslaService) Descriptor() protoreflect.EnumDescriptor {
	return file_tesla_proto_enumTypes[2].Descriptor()
}

func (TeslaService) Type() protoreflect.EnumType {
	return &file_tesla_proto_enumTypes[2]
}

func (x TeslaService) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TeslaService.Descriptor instead.
func (TeslaService) EnumDescriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{2}
}

type ExternalAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type ExternalAuthType `protobuf:"varint,1,opt,name=type,proto3,enum=teslapower.ExternalAuthType" json:"type,omitempty"`
}

func (x *ExternalAuth) Reset() {
	*x = ExternalAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalAuth) ProtoMessage() {}

func (x *ExternalAuth) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalAuth.ProtoReflect.Descriptor instead.
func (*ExternalAuth) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{0}
}

func (x *ExternalAuth) GetType() ExternalAuthType {
	if x != nil {
		return x.Type
	}
	return ExternalAuthType_EXTERNAL_AUTH_TYPE_INVALID
}

type Participant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Id:
	//	*Participant_Din
	//	*Participant_TeslaService
	//	*Participant_Local
	//	*Participant_AuthorizedClient
	Id isParticipant_Id `protobuf_oneof:"id"`
}

func (x *Participant) Reset() {
	*x = Participant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Participant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Participant) ProtoMessage() {}

func (x *Participant) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Participant.ProtoReflect.Descriptor instead.
func (*Participant) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{1}
}

func (m *Participant) GetId() isParticipant_Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (x *Participant) GetDin() string {
	if x, ok := x.GetId().(*Participant_Din); ok {
		return x.Din
	}
	return ""
}

func (x *Participant) GetTeslaService() int32 {
	if x, ok := x.GetId().(*Participant_TeslaService); ok {
		return x.TeslaService
	}
	return 0
}

func (x *Participant) GetLocal() int32 {
	if x, ok := x.GetId().(*Participant_Local); ok {
		return x.Local
	}
	return 0
}

func (x *Participant) GetAuthorizedClient() int32 {
	if x, ok := x.GetId().(*Participant_AuthorizedClient); ok {
		return x.AuthorizedClient
	}
	return 0
}

type isParticipant_Id interface {
	isParticipant_Id()
}

type Participant_Din struct {
	Din string `protobuf:"bytes,1,opt,name=din,proto3,oneof"`
}

type Participant_TeslaService struct {
	TeslaService int32 `protobuf:"varint,2,opt,name=teslaService,proto3,oneof"`
}

type Participant_Local struct {
	Local int32 `protobuf:"varint,3,opt,name=local,proto3,oneof"`
}

type Participant_AuthorizedClient struct {
	AuthorizedClient int32 `protobuf:"varint,4,opt,name=authorizedClient,proto3,oneof"`
}

func (*Participant_Din) isParticipant_Id() {}

func (*Participant_TeslaService) isParticipant_Id() {}

func (*Participant_Local) isParticipant_Id() {}

func (*Participant_AuthorizedClient) isParticipant_Id() {}

type EcuId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartNumber   string `protobuf:"bytes,1,opt,name=partNumber,proto3" json:"partNumber,omitempty"`
	SerialNumber string `protobuf:"bytes,2,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
}

func (x *EcuId) Reset() {
	*x = EcuId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EcuId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EcuId) ProtoMessage() {}

func (x *EcuId) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EcuId.ProtoReflect.Descriptor instead.
func (*EcuId) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{2}
}

func (x *EcuId) GetPartNumber() string {
	if x != nil {
		return x.PartNumber
	}
	return ""
}

func (x *EcuId) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

type Din struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Din) Reset() {
	*x = Din{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Din) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Din) ProtoMessage() {}

func (x *Din) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Din.ProtoReflect.Descriptor instead.
func (*Din) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{3}
}

func (x *Din) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type FirmwareVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Githash string `protobuf:"bytes,2,opt,name=githash,proto3" json:"githash,omitempty"`
}

func (x *FirmwareVersion) Reset() {
	*x = FirmwareVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirmwareVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirmwareVersion) ProtoMessage() {}

func (x *FirmwareVersion) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirmwareVersion.ProtoReflect.Descriptor instead.
func (*FirmwareVersion) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{4}
}

func (x *FirmwareVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *FirmwareVersion) GetGithash() string {
	if x != nil {
		return x.Githash
	}
	return ""
}

type AccumulatedEnergy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnergyWh         float32      `protobuf:"fixed32,1,opt,name=energyWh,proto3" json:"energyWh,omitempty"`
	AccumulationType int32        `protobuf:"varint,2,opt,name=accumulationType,proto3" json:"accumulationType,omitempty"`
	PeriodS          *UInt64Value `protobuf:"bytes,3,opt,name=periodS,proto3,oneof" json:"periodS,omitempty"`
}

func (x *AccumulatedEnergy) Reset() {
	*x = AccumulatedEnergy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccumulatedEnergy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccumulatedEnergy) ProtoMessage() {}

func (x *AccumulatedEnergy) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccumulatedEnergy.ProtoReflect.Descriptor instead.
func (*AccumulatedEnergy) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{5}
}

func (x *AccumulatedEnergy) GetEnergyWh() float32 {
	if x != nil {
		return x.EnergyWh
	}
	return 0
}

func (x *AccumulatedEnergy) GetAccumulationType() int32 {
	if x != nil {
		return x.AccumulationType
	}
	return 0
}

func (x *AccumulatedEnergy) GetPeriodS() *UInt64Value {
	if x != nil {
		return x.PeriodS
	}
	return nil
}

type InstACMeasurement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoltageVrms      float32     `protobuf:"fixed32,1,opt,name=voltageVrms,proto3" json:"voltageVrms,omitempty"`
	FrequencyHz      float32     `protobuf:"fixed32,2,opt,name=frequencyHz,proto3" json:"frequencyHz,omitempty"`
	CurrentArms      *FloatValue `protobuf:"bytes,3,opt,name=currentArms,proto3,oneof" json:"currentArms,omitempty"`
	RealPowerW       *FloatValue `protobuf:"bytes,4,opt,name=realPowerW,proto3,oneof" json:"realPowerW,omitempty"`
	ReactivePowerVar *FloatValue `protobuf:"bytes,5,opt,name=reactivePowerVar,proto3,oneof" json:"reactivePowerVar,omitempty"`
	ApparentPowerVa  *FloatValue `protobuf:"bytes,6,opt,name=apparentPowerVa,proto3,oneof" json:"apparentPowerVa,omitempty"`
}

func (x *InstACMeasurement) Reset() {
	*x = InstACMeasurement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstACMeasurement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstACMeasurement) ProtoMessage() {}

func (x *InstACMeasurement) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstACMeasurement.ProtoReflect.Descriptor instead.
func (*InstACMeasurement) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{6}
}

func (x *InstACMeasurement) GetVoltageVrms() float32 {
	if x != nil {
		return x.VoltageVrms
	}
	return 0
}

func (x *InstACMeasurement) GetFrequencyHz() float32 {
	if x != nil {
		return x.FrequencyHz
	}
	return 0
}

func (x *InstACMeasurement) GetCurrentArms() *FloatValue {
	if x != nil {
		return x.CurrentArms
	}
	return nil
}

func (x *InstACMeasurement) GetRealPowerW() *FloatValue {
	if x != nil {
		return x.RealPowerW
	}
	return nil
}

func (x *InstACMeasurement) GetReactivePowerVar() *FloatValue {
	if x != nil {
		return x.ReactivePowerVar
	}
	return nil
}

func (x *InstACMeasurement) GetApparentPowerVa() *FloatValue {
	if x != nil {
		return x.ApparentPowerVa
	}
	return nil
}

type InstDCMeasurement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoltageV float32     `protobuf:"fixed32,1,opt,name=voltageV,proto3" json:"voltageV,omitempty"`
	CurrentA *FloatValue `protobuf:"bytes,2,opt,name=currentA,proto3,oneof" json:"currentA,omitempty"`
}

func (x *InstDCMeasurement) Reset() {
	*x = InstDCMeasurement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstDCMeasurement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstDCMeasurement) ProtoMessage() {}

func (x *InstDCMeasurement) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstDCMeasurement.ProtoReflect.Descriptor instead.
func (*InstDCMeasurement) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{7}
}

func (x *InstDCMeasurement) GetVoltageV() float32 {
	if x != nil {
		return x.VoltageV
	}
	return 0
}

func (x *InstDCMeasurement) GetCurrentA() *FloatValue {
	if x != nil {
		return x.CurrentA
	}
	return nil
}

type GridComplianceStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GridState                int32        `protobuf:"varint,1,opt,name=gridState,proto3" json:"gridState,omitempty"`
	QualifyingTimeRemainingS *UInt32Value `protobuf:"bytes,2,opt,name=qualifyingTimeRemainingS,proto3,oneof" json:"qualifyingTimeRemainingS,omitempty"`
}

func (x *GridComplianceStatus) Reset() {
	*x = GridComplianceStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GridComplianceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GridComplianceStatus) ProtoMessage() {}

func (x *GridComplianceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GridComplianceStatus.ProtoReflect.Descriptor instead.
func (*GridComplianceStatus) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{8}
}

func (x *GridComplianceStatus) GetGridState() int32 {
	if x != nil {
		return x.GridState
	}
	return 0
}

func (x *GridComplianceStatus) GetQualifyingTimeRemainingS() *UInt32Value {
	if x != nil {
		return x.QualifyingTimeRemainingS
	}
	return nil
}

type NetworkInterfaceIPv4Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DhcpEnabled bool     `protobuf:"varint,2,opt,name=dhcpEnabled,proto3" json:"dhcpEnabled,omitempty"`
	Address     uint32   `protobuf:"fixed32,3,opt,name=address,proto3" json:"address,omitempty"`
	SubnetMask  uint32   `protobuf:"fixed32,4,opt,name=subnetMask,proto3" json:"subnetMask,omitempty"`
	Gateway     uint32   `protobuf:"fixed32,5,opt,name=gateway,proto3" json:"gateway,omitempty"`
	Dns         []uint32 `protobuf:"fixed32,6,rep,packed,name=dns,proto3" json:"dns,omitempty"`
}

func (x *NetworkInterfaceIPv4Config) Reset() {
	*x = NetworkInterfaceIPv4Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkInterfaceIPv4Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterfaceIPv4Config) ProtoMessage() {}

func (x *NetworkInterfaceIPv4Config) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterfaceIPv4Config.ProtoReflect.Descriptor instead.
func (*NetworkInterfaceIPv4Config) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{9}
}

func (x *NetworkInterfaceIPv4Config) GetDhcpEnabled() bool {
	if x != nil {
		return x.DhcpEnabled
	}
	return false
}

func (x *NetworkInterfaceIPv4Config) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *NetworkInterfaceIPv4Config) GetSubnetMask() uint32 {
	if x != nil {
		return x.SubnetMask
	}
	return 0
}

func (x *NetworkInterfaceIPv4Config) GetGateway() uint32 {
	if x != nil {
		return x.Gateway
	}
	return 0
}

func (x *NetworkInterfaceIPv4Config) GetDns() []uint32 {
	if x != nil {
		return x.Dns
	}
	return nil
}

type Rssi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value                 int32        `protobuf:"zigzag32,1,opt,name=value,proto3" json:"value,omitempty"`
	SignalStrengthPercent *UInt32Value `protobuf:"bytes,2,opt,name=signalStrengthPercent,proto3,oneof" json:"signalStrengthPercent,omitempty"`
}

func (x *Rssi) Reset() {
	*x = Rssi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rssi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rssi) ProtoMessage() {}

func (x *Rssi) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rssi.ProtoReflect.Descriptor instead.
func (*Rssi) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{10}
}

func (x *Rssi) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Rssi) GetSignalStrengthPercent() *UInt32Value {
	if x != nil {
		return x.SignalStrengthPercent
	}
	return nil
}

type NetworkConnectivityStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectedPhysical bool        `protobuf:"varint,1,opt,name=connectedPhysical,proto3" json:"connectedPhysical,omitempty"`
	ConnectedInternet bool        `protobuf:"varint,2,opt,name=connectedInternet,proto3" json:"connectedInternet,omitempty"`
	ConnectedTesla    bool        `protobuf:"varint,3,opt,name=connectedTesla,proto3" json:"connectedTesla,omitempty"`
	Rssi              *Rssi       `protobuf:"bytes,4,opt,name=rssi,proto3,oneof" json:"rssi,omitempty"`
	Snr               *Int32Value `protobuf:"bytes,5,opt,name=snr,proto3,oneof" json:"snr,omitempty"`
}

func (x *NetworkConnectivityStatus) Reset() {
	*x = NetworkConnectivityStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkConnectivityStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConnectivityStatus) ProtoMessage() {}

func (x *NetworkConnectivityStatus) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConnectivityStatus.ProtoReflect.Descriptor instead.
func (*NetworkConnectivityStatus) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{11}
}

func (x *NetworkConnectivityStatus) GetConnectedPhysical() bool {
	if x != nil {
		return x.ConnectedPhysical
	}
	return false
}

func (x *NetworkConnectivityStatus) GetConnectedInternet() bool {
	if x != nil {
		return x.ConnectedInternet
	}
	return false
}

func (x *NetworkConnectivityStatus) GetConnectedTesla() bool {
	if x != nil {
		return x.ConnectedTesla
	}
	return false
}

func (x *NetworkConnectivityStatus) GetRssi() *Rssi {
	if x != nil {
		return x.Rssi
	}
	return nil
}

func (x *NetworkConnectivityStatus) GetSnr() *Int32Value {
	if x != nil {
		return x.Snr
	}
	return nil
}

type NetworkInterface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MacAddress         []byte                      `protobuf:"bytes,1,opt,name=macAddress,proto3" json:"macAddress,omitempty"`
	Enabled            bool                        `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	ActiveRoute        bool                        `protobuf:"varint,3,opt,name=activeRoute,proto3" json:"activeRoute,omitempty"`
	Ipv4Config         *NetworkInterfaceIPv4Config `protobuf:"bytes,4,opt,name=ipv4Config,proto3,oneof" json:"ipv4Config,omitempty"`
	ConnectivityStatus *NetworkConnectivityStatus  `protobuf:"bytes,5,opt,name=connectivityStatus,proto3,oneof" json:"connectivityStatus,omitempty"`
}

func (x *NetworkInterface) Reset() {
	*x = NetworkInterface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterface) ProtoMessage() {}

func (x *NetworkInterface) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterface.ProtoReflect.Descriptor instead.
func (*NetworkInterface) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{12}
}

func (x *NetworkInterface) GetMacAddress() []byte {
	if x != nil {
		return x.MacAddress
	}
	return nil
}

func (x *NetworkInterface) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *NetworkInterface) GetActiveRoute() bool {
	if x != nil {
		return x.ActiveRoute
	}
	return false
}

func (x *NetworkInterface) GetIpv4Config() *NetworkInterfaceIPv4Config {
	if x != nil {
		return x.Ipv4Config
	}
	return nil
}

func (x *NetworkInterface) GetConnectivityStatus() *NetworkConnectivityStatus {
	if x != nil {
		return x.ConnectivityStatus
	}
	return nil
}

type WifiPassword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *WifiPassword) Reset() {
	*x = WifiPassword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiPassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiPassword) ProtoMessage() {}

func (x *WifiPassword) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiPassword.ProtoReflect.Descriptor instead.
func (*WifiPassword) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{13}
}

func (x *WifiPassword) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type EncryptedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cipher     int32  `protobuf:"varint,1,opt,name=cipher,proto3" json:"cipher,omitempty"`
	Ciphertext []byte `protobuf:"bytes,2,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
}

func (x *EncryptedMessage) Reset() {
	*x = EncryptedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptedMessage) ProtoMessage() {}

func (x *EncryptedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptedMessage.ProtoReflect.Descriptor instead.
func (*EncryptedMessage) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{14}
}

func (x *EncryptedMessage) GetCipher() int32 {
	if x != nil {
		return x.Cipher
	}
	return 0
}

func (x *EncryptedMessage) GetCiphertext() []byte {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

type WifiConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ssid         string  `protobuf:"bytes,1,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Password     *string `protobuf:"bytes,2,opt,name=password,proto3,oneof" json:"password,omitempty"`
	SecurityType *int32  `protobuf:"varint,3,opt,name=securityType,proto3,oneof" json:"securityType,omitempty"`
}

func (x *WifiConfig) Reset() {
	*x = WifiConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiConfig) ProtoMessage() {}

func (x *WifiConfig) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiConfig.ProtoReflect.Descriptor instead.
func (*WifiConfig) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{15}
}

func (x *WifiConfig) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *WifiConfig) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *WifiConfig) GetSecurityType() int32 {
	if x != nil && x.SecurityType != nil {
		return *x.SecurityType
	}
	return 0
}

type WifiNetwork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ssid         string `protobuf:"bytes,1,opt,name=ssid,proto3" json:"ssid,omitempty"`
	RssiValue    int32  `protobuf:"zigzag32,2,opt,name=rssiValue,proto3" json:"rssiValue,omitempty"`
	Rssi         *Rssi  `protobuf:"bytes,3,opt,name=rssi,proto3,oneof" json:"rssi,omitempty"`
	SecurityType *int32 `protobuf:"varint,4,opt,name=securityType,proto3,oneof" json:"securityType,omitempty"`
}

func (x *WifiNetwork) Reset() {
	*x = WifiNetwork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiNetwork) ProtoMessage() {}

func (x *WifiNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiNetwork.ProtoReflect.Descriptor instead.
func (*WifiNetwork) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{16}
}

func (x *WifiNetwork) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *WifiNetwork) GetRssiValue() int32 {
	if x != nil {
		return x.RssiValue
	}
	return 0
}

func (x *WifiNetwork) GetRssi() *Rssi {
	if x != nil {
		return x.Rssi
	}
	return nil
}

func (x *WifiNetwork) GetSecurityType() int32 {
	if x != nil && x.SecurityType != nil {
		return *x.SecurityType
	}
	return 0
}

type SystemUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HandshakeResult         int32            `protobuf:"varint,1,opt,name=handshakeResult,proto3" json:"handshakeResult,omitempty"`
	UpdateStatus            int32            `protobuf:"varint,2,opt,name=updateStatus,proto3" json:"updateStatus,omitempty"`
	ServerStagedVersion     *FirmwareVersion `protobuf:"bytes,3,opt,name=serverStagedVersion,proto3,oneof" json:"serverStagedVersion,omitempty"`
	TotalBytes              uint64           `protobuf:"varint,4,opt,name=totalBytes,proto3" json:"totalBytes,omitempty"`
	BytesOffset             uint64           `protobuf:"varint,5,opt,name=bytesOffset,proto3" json:"bytesOffset,omitempty"`
	EstimatedBytesPerSecond uint64           `protobuf:"varint,6,opt,name=estimatedBytesPerSecond,proto3" json:"estimatedBytesPerSecond,omitempty"`
	LastHandshakeTimestamp  uint64           `protobuf:"varint,7,opt,name=lastHandshakeTimestamp,proto3" json:"lastHandshakeTimestamp,omitempty"`
	LastUpdateResult        uint32           `protobuf:"varint,8,opt,name=lastUpdateResult,proto3" json:"lastUpdateResult,omitempty"`
}

func (x *SystemUpdate) Reset() {
	*x = SystemUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemUpdate) ProtoMessage() {}

func (x *SystemUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemUpdate.ProtoReflect.Descriptor instead.
func (*SystemUpdate) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{17}
}

func (x *SystemUpdate) GetHandshakeResult() int32 {
	if x != nil {
		return x.HandshakeResult
	}
	return 0
}

func (x *SystemUpdate) GetUpdateStatus() int32 {
	if x != nil {
		return x.UpdateStatus
	}
	return 0
}

func (x *SystemUpdate) GetServerStagedVersion() *FirmwareVersion {
	if x != nil {
		return x.ServerStagedVersion
	}
	return nil
}

func (x *SystemUpdate) GetTotalBytes() uint64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *SystemUpdate) GetBytesOffset() uint64 {
	if x != nil {
		return x.BytesOffset
	}
	return 0
}

func (x *SystemUpdate) GetEstimatedBytesPerSecond() uint64 {
	if x != nil {
		return x.EstimatedBytesPerSecond
	}
	return 0
}

func (x *SystemUpdate) GetLastHandshakeTimestamp() uint64 {
	if x != nil {
		return x.LastHandshakeTimestamp
	}
	return 0
}

func (x *SystemUpdate) GetLastUpdateResult() uint32 {
	if x != nil {
		return x.LastUpdateResult
	}
	return 0
}

type ErrorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status `protobuf:"bytes,1,opt,name=status,proto3,oneof" json:"status,omitempty"`
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{18}
}

func (x *ErrorResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type CommonAPIGetSystemInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonAPIGetSystemInfoRequest) Reset() {
	*x = CommonAPIGetSystemInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonAPIGetSystemInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonAPIGetSystemInfoRequest) ProtoMessage() {}

func (x *CommonAPIGetSystemInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonAPIGetSystemInfoRequest.ProtoReflect.Descriptor instead.
func (*CommonAPIGetSystemInfoRequest) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{19}
}

type CommonAPIGetSystemInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId        *EcuId           `protobuf:"bytes,1,opt,name=deviceId,proto3,oneof" json:"deviceId,omitempty"`
	Din             string           `protobuf:"bytes,2,opt,name=din,proto3" json:"din,omitempty"`
	FirmwareVersion *FirmwareVersion `protobuf:"bytes,3,opt,name=firmwareVersion,proto3,oneof" json:"firmwareVersion,omitempty"`
	SystemUpdate    *SystemUpdate    `protobuf:"bytes,5,opt,name=systemUpdate,proto3,oneof" json:"systemUpdate,omitempty"`
}

func (x *CommonAPIGetSystemInfoResponse) Reset() {
	*x = CommonAPIGetSystemInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonAPIGetSystemInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonAPIGetSystemInfoResponse) ProtoMessage() {}

func (x *CommonAPIGetSystemInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonAPIGetSystemInfoResponse.ProtoReflect.Descriptor instead.
func (*CommonAPIGetSystemInfoResponse) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{20}
}

func (x *CommonAPIGetSystemInfoResponse) GetDeviceId() *EcuId {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

func (x *CommonAPIGetSystemInfoResponse) GetDin() string {
	if x != nil {
		return x.Din
	}
	return ""
}

func (x *CommonAPIGetSystemInfoResponse) GetFirmwareVersion() *FirmwareVersion {
	if x != nil {
		return x.FirmwareVersion
	}
	return nil
}

func (x *CommonAPIGetSystemInfoResponse) GetSystemUpdate() *SystemUpdate {
	if x != nil {
		return x.SystemUpdate
	}
	return nil
}

type CommonAPISetLocalSiteConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonAPISetLocalSiteConfigRequest) Reset() {
	*x = CommonAPISetLocalSiteConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonAPISetLocalSiteConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonAPISetLocalSiteConfigRequest) ProtoMessage() {}

func (x *CommonAPISetLocalSiteConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonAPISetLocalSiteConfigRequest.ProtoReflect.Descriptor instead.
func (*CommonAPISetLocalSiteConfigRequest) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{21}
}

type CommonAPISetLocalSiteConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonAPISetLocalSiteConfigResponse) Reset() {
	*x = CommonAPISetLocalSiteConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonAPISetLocalSiteConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonAPISetLocalSiteConfigResponse) ProtoMessage() {}

func (x *CommonAPISetLocalSiteConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonAPISetLocalSiteConfigResponse.ProtoReflect.Descriptor instead.
func (*CommonAPISetLocalSiteConfigResponse) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{22}
}

type CommonAPICheckForUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonAPICheckForUpdateRequest) Reset() {
	*x = CommonAPICheckForUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonAPICheckForUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonAPICheckForUpdateRequest) ProtoMessage() {}

func (x *CommonAPICheckForUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonAPICheckForUpdateRequest.ProtoReflect.Descriptor instead.
func (*CommonAPICheckForUpdateRequest) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{23}
}

type CommonAPICheckForUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonAPICheckForUpdateResponse) Reset() {
	*x = CommonAPICheckForUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonAPICheckForUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonAPICheckForUpdateResponse) ProtoMessage() {}

func (x *CommonAPICheckForUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonAPICheckForUpdateResponse.ProtoReflect.Descriptor instead.
func (*CommonAPICheckForUpdateResponse) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{24}
}

type CommonAPIClearUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonAPIClearUpdateRequest) Reset() {
	*x = CommonAPIClearUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonAPIClearUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonAPIClearUpdateRequest) ProtoMessage() {}

func (x *CommonAPIClearUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonAPIClearUpdateRequest.ProtoReflect.Descriptor instead.
func (*CommonAPIClearUpdateRequest) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{25}
}

type CommonAPIClearUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonAPIClearUpdateResponse) Reset() {
	*x = CommonAPIClearUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonAPIClearUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonAPIClearUpdateResponse) ProtoMessage() {}

func (x *CommonAPIClearUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonAPIClearUpdateResponse.ProtoReflect.Descriptor instead.
func (*CommonAPIClearUpdateResponse) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{26}
}

type CommonAPIPerformUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonAPIPerformUpdateRequest) Reset() {
	*x = CommonAPIPerformUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonAPIPerformUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonAPIPerformUpdateRequest) ProtoMessage() {}

func (x *CommonAPIPerformUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonAPIPerformUpdateRequest.ProtoReflect.Descriptor instead.
func (*CommonAPIPerformUpdateRequest) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{27}
}

type CommonAPIPerformUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonAPIPerformUpdateResponse) Reset() {
	*x = CommonAPIPerformUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonAPIPerformUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonAPIPerformUpdateResponse) ProtoMessage() {}

func (x *CommonAPIPerformUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonAPIPerformUpdateResponse.ProtoReflect.Descriptor instead.
func (*CommonAPIPerformUpdateResponse) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{28}
}

type CommonAPIFactoryResetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonAPIFactoryResetRequest) Reset() {
	*x = CommonAPIFactoryResetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonAPIFactoryResetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonAPIFactoryResetRequest) ProtoMessage() {}

func (x *CommonAPIFactoryResetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonAPIFactoryResetRequest.ProtoReflect.Descriptor instead.
func (*CommonAPIFactoryResetRequest) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{29}
}

type CommonAPIFactoryResetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonAPIFactoryResetResponse) Reset() {
	*x = CommonAPIFactoryResetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonAPIFactoryResetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonAPIFactoryResetResponse) ProtoMessage() {}

func (x *CommonAPIFactoryResetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonAPIFactoryResetResponse.ProtoReflect.Descriptor instead.
func (*CommonAPIFactoryResetResponse) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{30}
}

type CommonAPIGetNetworkingStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonAPIGetNetworkingStatusRequest) Reset() {
	*x = CommonAPIGetNetworkingStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonAPIGetNetworkingStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonAPIGetNetworkingStatusRequest) ProtoMessage() {}

func (x *CommonAPIGetNetworkingStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonAPIGetNetworkingStatusRequest.ProtoReflect.Descriptor instead.
func (*CommonAPIGetNetworkingStatusRequest) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{31}
}

type CommonAPIGetNetworkingStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WifiConfig *WifiConfig       `protobuf:"bytes,1,opt,name=wifiConfig,proto3,oneof" json:"wifiConfig,omitempty"`
	Wifi       *NetworkInterface `protobuf:"bytes,2,opt,name=wifi,proto3,oneof" json:"wifi,omitempty"`
	Eth        *NetworkInterface `protobuf:"bytes,3,opt,name=eth,proto3,oneof" json:"eth,omitempty"`
	Gsm        *NetworkInterface `protobuf:"bytes,4,opt,name=gsm,proto3,oneof" json:"gsm,omitempty"`
}

func (x *CommonAPIGetNetworkingStatusResponse) Reset() {
	*x = CommonAPIGetNetworkingStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonAPIGetNetworkingStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonAPIGetNetworkingStatusResponse) ProtoMessage() {}

func (x *CommonAPIGetNetworkingStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonAPIGetNetworkingStatusResponse.ProtoReflect.Descriptor instead.
func (*CommonAPIGetNetworkingStatusResponse) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{32}
}

func (x *CommonAPIGetNetworkingStatusResponse) GetWifiConfig() *WifiConfig {
	if x != nil {
		return x.WifiConfig
	}
	return nil
}

func (x *CommonAPIGetNetworkingStatusResponse) GetWifi() *NetworkInterface {
	if x != nil {
		return x.Wifi
	}
	return nil
}

func (x *CommonAPIGetNetworkingStatusResponse) GetEth() *NetworkInterface {
	if x != nil {
		return x.Eth
	}
	return nil
}

func (x *CommonAPIGetNetworkingStatusResponse) GetGsm() *NetworkInterface {
	if x != nil {
		return x.Gsm
	}
	return nil
}

type CommonAPIWifiScanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxScanDurationS     uint32  `protobuf:"varint,1,opt,name=maxScanDurationS,proto3" json:"maxScanDurationS,omitempty"`
	DesiredSecurityTypes []int32 `protobuf:"varint,2,rep,packed,name=desiredSecurityTypes,proto3" json:"desiredSecurityTypes,omitempty"`
	MaximumTotalAps      uint32  `protobuf:"varint,3,opt,name=maximumTotalAps,proto3" json:"maximumTotalAps,omitempty"`
}

func (x *CommonAPIWifiScanRequest) Reset() {
	*x = CommonAPIWifiScanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonAPIWifiScanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonAPIWifiScanRequest) ProtoMessage() {}

func (x *CommonAPIWifiScanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonAPIWifiScanRequest.ProtoReflect.Descriptor instead.
func (*CommonAPIWifiScanRequest) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{33}
}

func (x *CommonAPIWifiScanRequest) GetMaxScanDurationS() uint32 {
	if x != nil {
		return x.MaxScanDurationS
	}
	return 0
}

func (x *CommonAPIWifiScanRequest) GetDesiredSecurityTypes() []int32 {
	if x != nil {
		return x.DesiredSecurityTypes
	}
	return nil
}

func (x *CommonAPIWifiScanRequest) GetMaximumTotalAps() uint32 {
	if x != nil {
		return x.MaximumTotalAps
	}
	return 0
}

type CommonAPIWifiScanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WifiNetworks []*WifiNetwork `protobuf:"bytes,1,rep,name=wifiNetworks,proto3" json:"wifiNetworks,omitempty"`
}

func (x *CommonAPIWifiScanResponse) Reset() {
	*x = CommonAPIWifiScanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonAPIWifiScanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonAPIWifiScanResponse) ProtoMessage() {}

func (x *CommonAPIWifiScanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonAPIWifiScanResponse.ProtoReflect.Descriptor instead.
func (*CommonAPIWifiScanResponse) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{34}
}

func (x *CommonAPIWifiScanResponse) GetWifiNetworks() []*WifiNetwork {
	if x != nil {
		return x.WifiNetworks
	}
	return nil
}

type CommonAPIConfigureWifiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled    bool        `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	WifiConfig *WifiConfig `protobuf:"bytes,2,opt,name=wifiConfig,proto3,oneof" json:"wifiConfig,omitempty"`
}

func (x *CommonAPIConfigureWifiRequest) Reset() {
	*x = CommonAPIConfigureWifiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonAPIConfigureWifiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonAPIConfigureWifiRequest) ProtoMessage() {}

func (x *CommonAPIConfigureWifiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonAPIConfigureWifiRequest.ProtoReflect.Descriptor instead.
func (*CommonAPIConfigureWifiRequest) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{35}
}

func (x *CommonAPIConfigureWifiRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *CommonAPIConfigureWifiRequest) GetWifiConfig() *WifiConfig {
	if x != nil {
		return x.WifiConfig
	}
	return nil
}

type CommonAPIConfigureWifiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WifiConfig *WifiConfig       `protobuf:"bytes,1,opt,name=wifiConfig,proto3,oneof" json:"wifiConfig,omitempty"`
	Wifi       *NetworkInterface `protobuf:"bytes,2,opt,name=wifi,proto3,oneof" json:"wifi,omitempty"`
}

func (x *CommonAPIConfigureWifiResponse) Reset() {
	*x = CommonAPIConfigureWifiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonAPIConfigureWifiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonAPIConfigureWifiResponse) ProtoMessage() {}

func (x *CommonAPIConfigureWifiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonAPIConfigureWifiResponse.ProtoReflect.Descriptor instead.
func (*CommonAPIConfigureWifiResponse) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{36}
}

func (x *CommonAPIConfigureWifiResponse) GetWifiConfig() *WifiConfig {
	if x != nil {
		return x.WifiConfig
	}
	return nil
}

func (x *CommonAPIConfigureWifiResponse) GetWifi() *NetworkInterface {
	if x != nil {
		return x.Wifi
	}
	return nil
}

type CommonAPIConfigureWifiWithEncryptedPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled           bool              `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	WifiConfig        *WifiConfig       `protobuf:"bytes,2,opt,name=wifiConfig,proto3,oneof" json:"wifiConfig,omitempty"`
	EncryptedPassword *EncryptedMessage `protobuf:"bytes,3,opt,name=encryptedPassword,proto3,oneof" json:"encryptedPassword,omitempty"`
}

func (x *CommonAPIConfigureWifiWithEncryptedPasswordRequest) Reset() {
	*x = CommonAPIConfigureWifiWithEncryptedPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonAPIConfigureWifiWithEncryptedPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonAPIConfigureWifiWithEncryptedPasswordRequest) ProtoMessage() {}

func (x *CommonAPIConfigureWifiWithEncryptedPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonAPIConfigureWifiWithEncryptedPasswordRequest.ProtoReflect.Descriptor instead.
func (*CommonAPIConfigureWifiWithEncryptedPasswordRequest) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{37}
}

func (x *CommonAPIConfigureWifiWithEncryptedPasswordRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *CommonAPIConfigureWifiWithEncryptedPasswordRequest) GetWifiConfig() *WifiConfig {
	if x != nil {
		return x.WifiConfig
	}
	return nil
}

func (x *CommonAPIConfigureWifiWithEncryptedPasswordRequest) GetEncryptedPassword() *EncryptedMessage {
	if x != nil {
		return x.EncryptedPassword
	}
	return nil
}

type CommonAPIConfigureWifiWithEncryptedPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WifiConfig *WifiConfig       `protobuf:"bytes,1,opt,name=wifiConfig,proto3,oneof" json:"wifiConfig,omitempty"`
	Wifi       *NetworkInterface `protobuf:"bytes,2,opt,name=wifi,proto3,oneof" json:"wifi,omitempty"`
	Result     int32             `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CommonAPIConfigureWifiWithEncryptedPasswordResponse) Reset() {
	*x = CommonAPIConfigureWifiWithEncryptedPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonAPIConfigureWifiWithEncryptedPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonAPIConfigureWifiWithEncryptedPasswordResponse) ProtoMessage() {}

func (x *CommonAPIConfigureWifiWithEncryptedPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonAPIConfigureWifiWithEncryptedPasswordResponse.ProtoReflect.Descriptor instead.
func (*CommonAPIConfigureWifiWithEncryptedPasswordResponse) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{38}
}

func (x *CommonAPIConfigureWifiWithEncryptedPasswordResponse) GetWifiConfig() *WifiConfig {
	if x != nil {
		return x.WifiConfig
	}
	return nil
}

func (x *CommonAPIConfigureWifiWithEncryptedPasswordResponse) GetWifi() *NetworkInterface {
	if x != nil {
		return x.Wifi
	}
	return nil
}

func (x *CommonAPIConfigureWifiWithEncryptedPasswordResponse) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type CommonAPIDeviceCertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonAPIDeviceCertRequest) Reset() {
	*x = CommonAPIDeviceCertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonAPIDeviceCertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonAPIDeviceCertRequest) ProtoMessage() {}

func (x *CommonAPIDeviceCertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonAPIDeviceCertRequest.ProtoReflect.Descriptor instead.
func (*CommonAPIDeviceCertRequest) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{39}
}

type CommonAPIDeviceCertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Format     int32  `protobuf:"varint,1,opt,name=format,proto3" json:"format,omitempty"`
	DeviceCert []byte `protobuf:"bytes,2,opt,name=deviceCert,proto3" json:"deviceCert,omitempty"`
}

func (x *CommonAPIDeviceCertResponse) Reset() {
	*x = CommonAPIDeviceCertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonAPIDeviceCertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonAPIDeviceCertResponse) ProtoMessage() {}

func (x *CommonAPIDeviceCertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonAPIDeviceCertResponse.ProtoReflect.Descriptor instead.
func (*CommonAPIDeviceCertResponse) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{40}
}

func (x *CommonAPIDeviceCertResponse) GetFormat() int32 {
	if x != nil {
		return x.Format
	}
	return 0
}

func (x *CommonAPIDeviceCertResponse) GetDeviceCert() []byte {
	if x != nil {
		return x.DeviceCert
	}
	return nil
}

type AlertLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data uint64 `protobuf:"fixed64,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AlertLog) Reset() {
	*x = AlertLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertLog) ProtoMessage() {}

func (x *AlertLog) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertLog.ProtoReflect.Descriptor instead.
func (*AlertLog) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{41}
}

func (x *AlertLog) GetData() uint64 {
	if x != nil {
		return x.Data
	}
	return 0
}

type AlertMatrix struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data uint64 `protobuf:"fixed64,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AlertMatrix) Reset() {
	*x = AlertMatrix{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertMatrix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertMatrix) ProtoMessage() {}

func (x *AlertMatrix) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertMatrix.ProtoReflect.Descriptor instead.
func (*AlertMatrix) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{42}
}

func (x *AlertMatrix) GetData() uint64 {
	if x != nil {
		return x.Data
	}
	return 0
}

type EnergySiteNetDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Din          *Din        `protobuf:"bytes,1,opt,name=din,proto3,oneof" json:"din,omitempty"`
	WifiApConfig *WifiConfig `protobuf:"bytes,2,opt,name=wifiApConfig,proto3,oneof" json:"wifiApConfig,omitempty"`
}

func (x *EnergySiteNetDevice) Reset() {
	*x = EnergySiteNetDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnergySiteNetDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergySiteNetDevice) ProtoMessage() {}

func (x *EnergySiteNetDevice) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergySiteNetDevice.ProtoReflect.Descriptor instead.
func (*EnergySiteNetDevice) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{43}
}

func (x *EnergySiteNetDevice) GetDin() *Din {
	if x != nil {
		return x.Din
	}
	return nil
}

func (x *EnergySiteNetDevice) GetWifiApConfig() *WifiConfig {
	if x != nil {
		return x.WifiApConfig
	}
	return nil
}

type EnergySiteNetRecentlyAddedDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Din    *Din  `protobuf:"bytes,1,opt,name=din,proto3,oneof" json:"din,omitempty"`
	Status int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *EnergySiteNetRecentlyAddedDevice) Reset() {
	*x = EnergySiteNetRecentlyAddedDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnergySiteNetRecentlyAddedDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergySiteNetRecentlyAddedDevice) ProtoMessage() {}

func (x *EnergySiteNetRecentlyAddedDevice) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergySiteNetRecentlyAddedDevice.ProtoReflect.Descriptor instead.
func (*EnergySiteNetRecentlyAddedDevice) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{44}
}

func (x *EnergySiteNetRecentlyAddedDevice) GetDin() *Din {
	if x != nil {
		return x.Din
	}
	return nil
}

func (x *EnergySiteNetRecentlyAddedDevice) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type EnergySiteNetRecentlyRemovedDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Din    *Din  `protobuf:"bytes,1,opt,name=din,proto3,oneof" json:"din,omitempty"`
	Status int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *EnergySiteNetRecentlyRemovedDevice) Reset() {
	*x = EnergySiteNetRecentlyRemovedDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnergySiteNetRecentlyRemovedDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergySiteNetRecentlyRemovedDevice) ProtoMessage() {}

func (x *EnergySiteNetRecentlyRemovedDevice) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergySiteNetRecentlyRemovedDevice.ProtoReflect.Descriptor instead.
func (*EnergySiteNetRecentlyRemovedDevice) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{45}
}

func (x *EnergySiteNetRecentlyRemovedDevice) GetDin() *Din {
	if x != nil {
		return x.Din
	}
	return nil
}

func (x *EnergySiteNetRecentlyRemovedDevice) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type EnergySiteNetConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Devices         []*EnergySiteNetDevice                `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
	RecentlyAdded   []*EnergySiteNetRecentlyAddedDevice   `protobuf:"bytes,2,rep,name=recentlyAdded,proto3" json:"recentlyAdded,omitempty"`
	RecentlyRemoved []*EnergySiteNetRecentlyRemovedDevice `protobuf:"bytes,3,rep,name=recentlyRemoved,proto3" json:"recentlyRemoved,omitempty"`
}

func (x *EnergySiteNetConfig) Reset() {
	*x = EnergySiteNetConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnergySiteNetConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergySiteNetConfig) ProtoMessage() {}

func (x *EnergySiteNetConfig) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergySiteNetConfig.ProtoReflect.Descriptor instead.
func (*EnergySiteNetConfig) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{46}
}

func (x *EnergySiteNetConfig) GetDevices() []*EnergySiteNetDevice {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *EnergySiteNetConfig) GetRecentlyAdded() []*EnergySiteNetRecentlyAddedDevice {
	if x != nil {
		return x.RecentlyAdded
	}
	return nil
}

func (x *EnergySiteNetConfig) GetRecentlyRemoved() []*EnergySiteNetRecentlyRemovedDevice {
	if x != nil {
		return x.RecentlyRemoved
	}
	return nil
}

type EnergySiteNetAPIAddDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *EnergySiteNetDevice `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *EnergySiteNetAPIAddDeviceRequest) Reset() {
	*x = EnergySiteNetAPIAddDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnergySiteNetAPIAddDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergySiteNetAPIAddDeviceRequest) ProtoMessage() {}

func (x *EnergySiteNetAPIAddDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergySiteNetAPIAddDeviceRequest.ProtoReflect.Descriptor instead.
func (*EnergySiteNetAPIAddDeviceRequest) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{47}
}

func (x *EnergySiteNetAPIAddDeviceRequest) GetDevice() *EnergySiteNetDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

type EnergySiteNetAPIAddDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecentlyAdded *EnergySiteNetRecentlyAddedDevice `protobuf:"bytes,1,opt,name=recentlyAdded,proto3" json:"recentlyAdded,omitempty"`
}

func (x *EnergySiteNetAPIAddDeviceResponse) Reset() {
	*x = EnergySiteNetAPIAddDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnergySiteNetAPIAddDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergySiteNetAPIAddDeviceResponse) ProtoMessage() {}

func (x *EnergySiteNetAPIAddDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergySiteNetAPIAddDeviceResponse.ProtoReflect.Descriptor instead.
func (*EnergySiteNetAPIAddDeviceResponse) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{48}
}

func (x *EnergySiteNetAPIAddDeviceResponse) GetRecentlyAdded() *EnergySiteNetRecentlyAddedDevice {
	if x != nil {
		return x.RecentlyAdded
	}
	return nil
}

type EnergySiteNetAPIRemoveDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Din *Din `protobuf:"bytes,1,opt,name=din,proto3" json:"din,omitempty"`
}

func (x *EnergySiteNetAPIRemoveDeviceRequest) Reset() {
	*x = EnergySiteNetAPIRemoveDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnergySiteNetAPIRemoveDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergySiteNetAPIRemoveDeviceRequest) ProtoMessage() {}

func (x *EnergySiteNetAPIRemoveDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergySiteNetAPIRemoveDeviceRequest.ProtoReflect.Descriptor instead.
func (*EnergySiteNetAPIRemoveDeviceRequest) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{49}
}

func (x *EnergySiteNetAPIRemoveDeviceRequest) GetDin() *Din {
	if x != nil {
		return x.Din
	}
	return nil
}

type EnergySiteNetAPIRemoveDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecentlyRemoved *EnergySiteNetRecentlyRemovedDevice `protobuf:"bytes,1,opt,name=recentlyRemoved,proto3" json:"recentlyRemoved,omitempty"`
}

func (x *EnergySiteNetAPIRemoveDeviceResponse) Reset() {
	*x = EnergySiteNetAPIRemoveDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnergySiteNetAPIRemoveDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergySiteNetAPIRemoveDeviceResponse) ProtoMessage() {}

func (x *EnergySiteNetAPIRemoveDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergySiteNetAPIRemoveDeviceResponse.ProtoReflect.Descriptor instead.
func (*EnergySiteNetAPIRemoveDeviceResponse) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{50}
}

func (x *EnergySiteNetAPIRemoveDeviceResponse) GetRecentlyRemoved() *EnergySiteNetRecentlyRemovedDevice {
	if x != nil {
		return x.RecentlyRemoved
	}
	return nil
}

type EnergySiteNetAPIGetConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnergySiteNetAPIGetConfigRequest) Reset() {
	*x = EnergySiteNetAPIGetConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnergySiteNetAPIGetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergySiteNetAPIGetConfigRequest) ProtoMessage() {}

func (x *EnergySiteNetAPIGetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergySiteNetAPIGetConfigRequest.ProtoReflect.Descriptor instead.
func (*EnergySiteNetAPIGetConfigRequest) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{51}
}

type EnergySiteNetAPIGetConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *EnergySiteNetConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *EnergySiteNetAPIGetConfigResponse) Reset() {
	*x = EnergySiteNetAPIGetConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnergySiteNetAPIGetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergySiteNetAPIGetConfigResponse) ProtoMessage() {}

func (x *EnergySiteNetAPIGetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergySiteNetAPIGetConfigResponse.ProtoReflect.Descriptor instead.
func (*EnergySiteNetAPIGetConfigResponse) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{52}
}

func (x *EnergySiteNetAPIGetConfigResponse) GetConfig() *EnergySiteNetConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type DeviceVital struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Types that are assignable to Value:
	//	*DeviceVital_IntValue
	//	*DeviceVital_FloatValue
	//	*DeviceVital_StringValue
	//	*DeviceVital_BoolValue
	Value isDeviceVital_Value `protobuf_oneof:"value"`
}

func (x *DeviceVital) Reset() {
	*x = DeviceVital{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceVital) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceVital) ProtoMessage() {}

func (x *DeviceVital) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceVital.ProtoReflect.Descriptor instead.
func (*DeviceVital) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{53}
}

func (x *DeviceVital) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (m *DeviceVital) GetValue() isDeviceVital_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *DeviceVital) GetIntValue() int64 {
	if x, ok := x.GetValue().(*DeviceVital_IntValue); ok {
		return x.IntValue
	}
	return 0
}

func (x *DeviceVital) GetFloatValue() float64 {
	if x, ok := x.GetValue().(*DeviceVital_FloatValue); ok {
		return x.FloatValue
	}
	return 0
}

func (x *DeviceVital) GetStringValue() string {
	if x, ok := x.GetValue().(*DeviceVital_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *DeviceVital) GetBoolValue() bool {
	if x, ok := x.GetValue().(*DeviceVital_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

type isDeviceVital_Value interface {
	isDeviceVital_Value()
}

type DeviceVital_IntValue struct {
	IntValue int64 `protobuf:"varint,3,opt,name=intValue,proto3,oneof"`
}

type DeviceVital_FloatValue struct {
	FloatValue float64 `protobuf:"fixed64,4,opt,name=floatValue,proto3,oneof"`
}

type DeviceVital_StringValue struct {
	StringValue string `protobuf:"bytes,5,opt,name=stringValue,proto3,oneof"`
}

type DeviceVital_BoolValue struct {
	BoolValue bool `protobuf:"varint,6,opt,name=boolValue,proto3,oneof"`
}

func (*DeviceVital_IntValue) isDeviceVital_Value() {}

func (*DeviceVital_FloatValue) isDeviceVital_Value() {}

func (*DeviceVital_StringValue) isDeviceVital_Value() {}

func (*DeviceVital_BoolValue) isDeviceVital_Value() {}

type StringValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *StringValue) Reset() {
	*x = StringValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringValue) ProtoMessage() {}

func (x *StringValue) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringValue.ProtoReflect.Descriptor instead.
func (*StringValue) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{54}
}

func (x *StringValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type UInt32Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value uint32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UInt32Value) Reset() {
	*x = UInt32Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UInt32Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UInt32Value) ProtoMessage() {}

func (x *UInt32Value) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UInt32Value.ProtoReflect.Descriptor instead.
func (*UInt32Value) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{55}
}

func (x *UInt32Value) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Int32Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Int32Value) Reset() {
	*x = Int32Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int32Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int32Value) ProtoMessage() {}

func (x *Int32Value) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int32Value.ProtoReflect.Descriptor instead.
func (*Int32Value) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{56}
}

func (x *Int32Value) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type UInt64Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value uint64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UInt64Value) Reset() {
	*x = UInt64Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UInt64Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UInt64Value) ProtoMessage() {}

func (x *UInt64Value) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UInt64Value.ProtoReflect.Descriptor instead.
func (*UInt64Value) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{57}
}

func (x *UInt64Value) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type FloatValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value float32 `protobuf:"fixed32,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *FloatValue) Reset() {
	*x = FloatValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FloatValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FloatValue) ProtoMessage() {}

func (x *FloatValue) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FloatValue.ProtoReflect.Descriptor instead.
func (*FloatValue) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{58}
}

func (x *FloatValue) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ConnectionParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddress  *StringValue `protobuf:"bytes,1,opt,name=ipAddress,proto3,oneof" json:"ipAddress,omitempty"`
	SerialPort *StringValue `protobuf:"bytes,2,opt,name=serialPort,proto3,oneof" json:"serialPort,omitempty"`
	SerialBaud *int64       `protobuf:"varint,3,opt,name=serialBaud,proto3,oneof" json:"serialBaud,omitempty"`
	ModbusId   *uint32      `protobuf:"varint,4,opt,name=modbusId,proto3,oneof" json:"modbusId,omitempty"`
}

func (x *ConnectionParameters) Reset() {
	*x = ConnectionParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionParameters) ProtoMessage() {}

func (x *ConnectionParameters) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionParameters.ProtoReflect.Descriptor instead.
func (*ConnectionParameters) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{59}
}

func (x *ConnectionParameters) GetIpAddress() *StringValue {
	if x != nil {
		return x.IpAddress
	}
	return nil
}

func (x *ConnectionParameters) GetSerialPort() *StringValue {
	if x != nil {
		return x.SerialPort
	}
	return nil
}

func (x *ConnectionParameters) GetSerialBaud() int64 {
	if x != nil && x.SerialBaud != nil {
		return *x.SerialBaud
	}
	return 0
}

func (x *ConnectionParameters) GetModbusId() uint32 {
	if x != nil && x.ModbusId != nil {
		return *x.ModbusId
	}
	return 0
}

type TeslaHardwareId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PcbaId     *UInt32Value `protobuf:"bytes,1,opt,name=pcbaId,proto3,oneof" json:"pcbaId,omitempty"`
	AssemblyId *UInt32Value `protobuf:"bytes,2,opt,name=assemblyId,proto3,oneof" json:"assemblyId,omitempty"`
	UsageId    *UInt32Value `protobuf:"bytes,3,opt,name=usageId,proto3,oneof" json:"usageId,omitempty"`
}

func (x *TeslaHardwareId) Reset() {
	*x = TeslaHardwareId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeslaHardwareId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeslaHardwareId) ProtoMessage() {}

func (x *TeslaHardwareId) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeslaHardwareId.ProtoReflect.Descriptor instead.
func (*TeslaHardwareId) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{60}
}

func (x *TeslaHardwareId) GetPcbaId() *UInt32Value {
	if x != nil {
		return x.PcbaId
	}
	return nil
}

func (x *TeslaHardwareId) GetAssemblyId() *UInt32Value {
	if x != nil {
		return x.AssemblyId
	}
	return nil
}

func (x *TeslaHardwareId) GetUsageId() *UInt32Value {
	if x != nil {
		return x.UsageId
	}
	return nil
}

type TeslaEnergyEcuAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EcuType              int32                 `protobuf:"varint,1,opt,name=ecuType,proto3" json:"ecuType,omitempty"`
	HardwareId           *TeslaHardwareId      `protobuf:"bytes,2,opt,name=hardwareId,proto3,oneof" json:"hardwareId,omitempty"`
	PvInverterAttributes *PVInverterAttributes `protobuf:"bytes,3,opt,name=pvInverterAttributes,proto3,oneof" json:"pvInverterAttributes,omitempty"`
	MeterAttributes      *MeterAttributes      `protobuf:"bytes,4,opt,name=meterAttributes,proto3,oneof" json:"meterAttributes,omitempty"`
}

func (x *TeslaEnergyEcuAttributes) Reset() {
	*x = TeslaEnergyEcuAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeslaEnergyEcuAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeslaEnergyEcuAttributes) ProtoMessage() {}

func (x *TeslaEnergyEcuAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeslaEnergyEcuAttributes.ProtoReflect.Descriptor instead.
func (*TeslaEnergyEcuAttributes) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{61}
}

func (x *TeslaEnergyEcuAttributes) GetEcuType() int32 {
	if x != nil {
		return x.EcuType
	}
	return 0
}

func (x *TeslaEnergyEcuAttributes) GetHardwareId() *TeslaHardwareId {
	if x != nil {
		return x.HardwareId
	}
	return nil
}

func (x *TeslaEnergyEcuAttributes) GetPvInverterAttributes() *PVInverterAttributes {
	if x != nil {
		return x.PvInverterAttributes
	}
	return nil
}

func (x *TeslaEnergyEcuAttributes) GetMeterAttributes() *MeterAttributes {
	if x != nil {
		return x.MeterAttributes
	}
	return nil
}

type GeneratorAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameplateRealPowerW      uint64 `protobuf:"varint,1,opt,name=nameplateRealPowerW,proto3" json:"nameplateRealPowerW,omitempty"`
	NameplateApparentPowerVa uint64 `protobuf:"varint,2,opt,name=nameplateApparentPowerVa,proto3" json:"nameplateApparentPowerVa,omitempty"`
}

func (x *GeneratorAttributes) Reset() {
	*x = GeneratorAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneratorAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratorAttributes) ProtoMessage() {}

func (x *GeneratorAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratorAttributes.ProtoReflect.Descriptor instead.
func (*GeneratorAttributes) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{62}
}

func (x *GeneratorAttributes) GetNameplateRealPowerW() uint64 {
	if x != nil {
		return x.NameplateRealPowerW
	}
	return 0
}

func (x *GeneratorAttributes) GetNameplateApparentPowerVa() uint64 {
	if x != nil {
		return x.NameplateApparentPowerVa
	}
	return 0
}

type PVInverterAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameplateRealPowerW uint64 `protobuf:"varint,1,opt,name=nameplateRealPowerW,proto3" json:"nameplateRealPowerW,omitempty"`
}

func (x *PVInverterAttributes) Reset() {
	*x = PVInverterAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PVInverterAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PVInverterAttributes) ProtoMessage() {}

func (x *PVInverterAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PVInverterAttributes.ProtoReflect.Descriptor instead.
func (*PVInverterAttributes) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{63}
}

func (x *PVInverterAttributes) GetNameplateRealPowerW() uint64 {
	if x != nil {
		return x.NameplateRealPowerW
	}
	return 0
}

type MeterAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeterLocation []uint32 `protobuf:"varint,1,rep,packed,name=meterLocation,proto3" json:"meterLocation,omitempty"`
}

func (x *MeterAttributes) Reset() {
	*x = MeterAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeterAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeterAttributes) ProtoMessage() {}

func (x *MeterAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeterAttributes.ProtoReflect.Descriptor instead.
func (*MeterAttributes) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{64}
}

func (x *MeterAttributes) GetMeterLocation() []uint32 {
	if x != nil {
		return x.MeterLocation
	}
	return nil
}

type DeviceAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to DeviceAttributes:
	//	*DeviceAttributes_TeslaEnergyEcuAttributes
	//	*DeviceAttributes_GeneratorAttributes
	//	*DeviceAttributes_PvInverterAttributes
	//	*DeviceAttributes_MeterAttributes
	DeviceAttributes isDeviceAttributes_DeviceAttributes `protobuf_oneof:"deviceAttributes"`
}

func (x *DeviceAttributes) Reset() {
	*x = DeviceAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceAttributes) ProtoMessage() {}

func (x *DeviceAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceAttributes.ProtoReflect.Descriptor instead.
func (*DeviceAttributes) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{65}
}

func (m *DeviceAttributes) GetDeviceAttributes() isDeviceAttributes_DeviceAttributes {
	if m != nil {
		return m.DeviceAttributes
	}
	return nil
}

func (x *DeviceAttributes) GetTeslaEnergyEcuAttributes() *TeslaEnergyEcuAttributes {
	if x, ok := x.GetDeviceAttributes().(*DeviceAttributes_TeslaEnergyEcuAttributes); ok {
		return x.TeslaEnergyEcuAttributes
	}
	return nil
}

func (x *DeviceAttributes) GetGeneratorAttributes() *GeneratorAttributes {
	if x, ok := x.GetDeviceAttributes().(*DeviceAttributes_GeneratorAttributes); ok {
		return x.GeneratorAttributes
	}
	return nil
}

func (x *DeviceAttributes) GetPvInverterAttributes() *PVInverterAttributes {
	if x, ok := x.GetDeviceAttributes().(*DeviceAttributes_PvInverterAttributes); ok {
		return x.PvInverterAttributes
	}
	return nil
}

func (x *DeviceAttributes) GetMeterAttributes() *MeterAttributes {
	if x, ok := x.GetDeviceAttributes().(*DeviceAttributes_MeterAttributes); ok {
		return x.MeterAttributes
	}
	return nil
}

type isDeviceAttributes_DeviceAttributes interface {
	isDeviceAttributes_DeviceAttributes()
}

type DeviceAttributes_TeslaEnergyEcuAttributes struct {
	TeslaEnergyEcuAttributes *TeslaEnergyEcuAttributes `protobuf:"bytes,1,opt,name=teslaEnergyEcuAttributes,proto3,oneof"`
}

type DeviceAttributes_GeneratorAttributes struct {
	GeneratorAttributes *GeneratorAttributes `protobuf:"bytes,2,opt,name=generatorAttributes,proto3,oneof"`
}

type DeviceAttributes_PvInverterAttributes struct {
	PvInverterAttributes *PVInverterAttributes `protobuf:"bytes,3,opt,name=pvInverterAttributes,proto3,oneof"`
}

type DeviceAttributes_MeterAttributes struct {
	MeterAttributes *MeterAttributes `protobuf:"bytes,4,opt,name=meterAttributes,proto3,oneof"`
}

func (*DeviceAttributes_TeslaEnergyEcuAttributes) isDeviceAttributes_DeviceAttributes() {}

func (*DeviceAttributes_GeneratorAttributes) isDeviceAttributes_DeviceAttributes() {}

func (*DeviceAttributes_PvInverterAttributes) isDeviceAttributes_DeviceAttributes() {}

func (*DeviceAttributes_MeterAttributes) isDeviceAttributes_DeviceAttributes() {}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Din                    *StringValue           `protobuf:"bytes,1,opt,name=din,proto3,oneof" json:"din,omitempty"`
	PartNumber             *StringValue           `protobuf:"bytes,2,opt,name=partNumber,proto3,oneof" json:"partNumber,omitempty"`
	SerialNumber           *StringValue           `protobuf:"bytes,3,opt,name=serialNumber,proto3,oneof" json:"serialNumber,omitempty"`
	Manufacturer           *StringValue           `protobuf:"bytes,4,opt,name=manufacturer,proto3,oneof" json:"manufacturer,omitempty"`
	SiteLabel              *StringValue           `protobuf:"bytes,5,opt,name=siteLabel,proto3,oneof" json:"siteLabel,omitempty"`
	ComponentParentDin     *StringValue           `protobuf:"bytes,6,opt,name=componentParentDin,proto3,oneof" json:"componentParentDin,omitempty"`
	FirmwareVersion        *StringValue           `protobuf:"bytes,7,opt,name=firmwareVersion,proto3,oneof" json:"firmwareVersion,omitempty"`
	FirstCommunicationTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=firstCommunicationTime,proto3,oneof" json:"firstCommunicationTime,omitempty"`
	LastCommunicationTime  *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=lastCommunicationTime,proto3,oneof" json:"lastCommunicationTime,omitempty"`
	ConnectionParameters   *ConnectionParameters  `protobuf:"bytes,10,opt,name=connectionParameters,proto3,oneof" json:"connectionParameters,omitempty"`
	DeviceAttributes       *DeviceAttributes      `protobuf:"bytes,11,opt,name=deviceAttributes,proto3,oneof" json:"deviceAttributes,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{66}
}

func (x *Device) GetDin() *StringValue {
	if x != nil {
		return x.Din
	}
	return nil
}

func (x *Device) GetPartNumber() *StringValue {
	if x != nil {
		return x.PartNumber
	}
	return nil
}

func (x *Device) GetSerialNumber() *StringValue {
	if x != nil {
		return x.SerialNumber
	}
	return nil
}

func (x *Device) GetManufacturer() *StringValue {
	if x != nil {
		return x.Manufacturer
	}
	return nil
}

func (x *Device) GetSiteLabel() *StringValue {
	if x != nil {
		return x.SiteLabel
	}
	return nil
}

func (x *Device) GetComponentParentDin() *StringValue {
	if x != nil {
		return x.ComponentParentDin
	}
	return nil
}

func (x *Device) GetFirmwareVersion() *StringValue {
	if x != nil {
		return x.FirmwareVersion
	}
	return nil
}

func (x *Device) GetFirstCommunicationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstCommunicationTime
	}
	return nil
}

func (x *Device) GetLastCommunicationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastCommunicationTime
	}
	return nil
}

func (x *Device) GetConnectionParameters() *ConnectionParameters {
	if x != nil {
		return x.ConnectionParameters
	}
	return nil
}

func (x *Device) GetDeviceAttributes() *DeviceAttributes {
	if x != nil {
		return x.DeviceAttributes
	}
	return nil
}

type SiteControllerConnectedDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *Device `protobuf:"bytes,1,opt,name=device,proto3,oneof" json:"device,omitempty"`
}

func (x *SiteControllerConnectedDevice) Reset() {
	*x = SiteControllerConnectedDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteControllerConnectedDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteControllerConnectedDevice) ProtoMessage() {}

func (x *SiteControllerConnectedDevice) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteControllerConnectedDevice.ProtoReflect.Descriptor instead.
func (*SiteControllerConnectedDevice) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{67}
}

func (x *SiteControllerConnectedDevice) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

type SiteControllerConnectedDeviceWithVitals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *SiteControllerConnectedDevice `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	Vitals []*DeviceVital                 `protobuf:"bytes,2,rep,name=vitals,proto3" json:"vitals,omitempty"`
	Alerts []string                       `protobuf:"bytes,3,rep,name=alerts,proto3" json:"alerts,omitempty"`
}

func (x *SiteControllerConnectedDeviceWithVitals) Reset() {
	*x = SiteControllerConnectedDeviceWithVitals{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteControllerConnectedDeviceWithVitals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteControllerConnectedDeviceWithVitals) ProtoMessage() {}

func (x *SiteControllerConnectedDeviceWithVitals) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteControllerConnectedDeviceWithVitals.ProtoReflect.Descriptor instead.
func (*SiteControllerConnectedDeviceWithVitals) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{68}
}

func (x *SiteControllerConnectedDeviceWithVitals) GetDevice() *SiteControllerConnectedDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *SiteControllerConnectedDeviceWithVitals) GetVitals() []*DeviceVital {
	if x != nil {
		return x.Vitals
	}
	return nil
}

func (x *SiteControllerConnectedDeviceWithVitals) GetAlerts() []string {
	if x != nil {
		return x.Alerts
	}
	return nil
}

type DevicesWithVitals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Devices []*SiteControllerConnectedDeviceWithVitals `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
}

func (x *DevicesWithVitals) Reset() {
	*x = DevicesWithVitals{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DevicesWithVitals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevicesWithVitals) ProtoMessage() {}

func (x *DevicesWithVitals) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevicesWithVitals.ProtoReflect.Descriptor instead.
func (*DevicesWithVitals) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{69}
}

func (x *DevicesWithVitals) GetDevices() []*SiteControllerConnectedDeviceWithVitals {
	if x != nil {
		return x.Devices
	}
	return nil
}

type SiteControllerConnectedDeviceStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteControllerConnectedDevice []*SiteControllerConnectedDevice `protobuf:"bytes,1,rep,name=siteControllerConnectedDevice,proto3" json:"siteControllerConnectedDevice,omitempty"`
}

func (x *SiteControllerConnectedDeviceStore) Reset() {
	*x = SiteControllerConnectedDeviceStore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteControllerConnectedDeviceStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteControllerConnectedDeviceStore) ProtoMessage() {}

func (x *SiteControllerConnectedDeviceStore) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteControllerConnectedDeviceStore.ProtoReflect.Descriptor instead.
func (*SiteControllerConnectedDeviceStore) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{70}
}

func (x *SiteControllerConnectedDeviceStore) GetSiteControllerConnectedDevice() []*SiteControllerConnectedDevice {
	if x != nil {
		return x.SiteControllerConnectedDevice
	}
	return nil
}

type BatterySystemCapabilities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NominalEnergyWh uint64 `protobuf:"varint,1,opt,name=nominalEnergyWh,proto3" json:"nominalEnergyWh,omitempty"`
	NominalPowerW   uint64 `protobuf:"varint,2,opt,name=nominalPowerW,proto3" json:"nominalPowerW,omitempty"`
}

func (x *BatterySystemCapabilities) Reset() {
	*x = BatterySystemCapabilities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatterySystemCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatterySystemCapabilities) ProtoMessage() {}

func (x *BatterySystemCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatterySystemCapabilities.ProtoReflect.Descriptor instead.
func (*BatterySystemCapabilities) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{71}
}

func (x *BatterySystemCapabilities) GetNominalEnergyWh() uint64 {
	if x != nil {
		return x.NominalEnergyWh
	}
	return 0
}

func (x *BatterySystemCapabilities) GetNominalPowerW() uint64 {
	if x != nil {
		return x.NominalPowerW
	}
	return 0
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details []*anypb.Any `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{72}
}

func (x *Status) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Status) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Status) GetDetails() []*anypb.Any {
	if x != nil {
		return x.Details
	}
	return nil
}

type Manifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatewayDin                string                     `protobuf:"bytes,1,opt,name=gatewayDin,proto3" json:"gatewayDin,omitempty"`
	Trigger                   int32                      `protobuf:"varint,2,opt,name=trigger,proto3" json:"trigger,omitempty"`
	GeneratedTime             *timestamppb.Timestamp     `protobuf:"bytes,3,opt,name=generatedTime,proto3" json:"generatedTime,omitempty"`
	Device                    []*Device                  `protobuf:"bytes,4,rep,name=device,proto3" json:"device,omitempty"`
	BatterySystemCapabilities *BatterySystemCapabilities `protobuf:"bytes,5,opt,name=batterySystemCapabilities,proto3,oneof" json:"batterySystemCapabilities,omitempty"`
	GatewayFirmwareVersion    *StringValue               `protobuf:"bytes,6,opt,name=gatewayFirmwareVersion,proto3,oneof" json:"gatewayFirmwareVersion,omitempty"`
}

func (x *Manifest) Reset() {
	*x = Manifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Manifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Manifest) ProtoMessage() {}

func (x *Manifest) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Manifest.ProtoReflect.Descriptor instead.
func (*Manifest) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{73}
}

func (x *Manifest) GetGatewayDin() string {
	if x != nil {
		return x.GatewayDin
	}
	return ""
}

func (x *Manifest) GetTrigger() int32 {
	if x != nil {
		return x.Trigger
	}
	return 0
}

func (x *Manifest) GetGeneratedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.GeneratedTime
	}
	return nil
}

func (x *Manifest) GetDevice() []*Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *Manifest) GetBatterySystemCapabilities() *BatterySystemCapabilities {
	if x != nil {
		return x.BatterySystemCapabilities
	}
	return nil
}

func (x *Manifest) GetGatewayFirmwareVersion() *StringValue {
	if x != nil {
		return x.GatewayFirmwareVersion
	}
	return nil
}

type MessageEnvelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeliveryChannel int32        `protobuf:"varint,1,opt,name=deliveryChannel,proto3" json:"deliveryChannel,omitempty"`
	Sender          *Participant `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipient       *Participant `protobuf:"bytes,3,opt,name=recipient,proto3" json:"recipient,omitempty"`
	// Types that are assignable to Payload:
	//	*MessageEnvelope_Common
	//	*MessageEnvelope_Teg
	//	*MessageEnvelope_Energysitenet
	Payload isMessageEnvelope_Payload `protobuf_oneof:"payload"`
}

func (x *MessageEnvelope) Reset() {
	*x = MessageEnvelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEnvelope) ProtoMessage() {}

func (x *MessageEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEnvelope.ProtoReflect.Descriptor instead.
func (*MessageEnvelope) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{74}
}

func (x *MessageEnvelope) GetDeliveryChannel() int32 {
	if x != nil {
		return x.DeliveryChannel
	}
	return 0
}

func (x *MessageEnvelope) GetSender() *Participant {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *MessageEnvelope) GetRecipient() *Participant {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (m *MessageEnvelope) GetPayload() isMessageEnvelope_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *MessageEnvelope) GetCommon() *CommonMessages {
	if x, ok := x.GetPayload().(*MessageEnvelope_Common); ok {
		return x.Common
	}
	return nil
}

func (x *MessageEnvelope) GetTeg() *TEGMessages {
	if x, ok := x.GetPayload().(*MessageEnvelope_Teg); ok {
		return x.Teg
	}
	return nil
}

func (x *MessageEnvelope) GetEnergysitenet() *EnergySiteNetMessages {
	if x, ok := x.GetPayload().(*MessageEnvelope_Energysitenet); ok {
		return x.Energysitenet
	}
	return nil
}

type isMessageEnvelope_Payload interface {
	isMessageEnvelope_Payload()
}

type MessageEnvelope_Common struct {
	Common *CommonMessages `protobuf:"bytes,4,opt,name=common,proto3,oneof"`
}

type MessageEnvelope_Teg struct {
	Teg *TEGMessages `protobuf:"bytes,5,opt,name=teg,proto3,oneof"`
}

type MessageEnvelope_Energysitenet struct {
	Energysitenet *EnergySiteNetMessages `protobuf:"bytes,6,opt,name=energysitenet,proto3,oneof"`
}

func (*MessageEnvelope_Common) isMessageEnvelope_Payload() {}

func (*MessageEnvelope_Teg) isMessageEnvelope_Payload() {}

func (*MessageEnvelope_Energysitenet) isMessageEnvelope_Payload() {}

type CommonMessages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorResponse int32 `protobuf:"varint,1,opt,name=errorResponse,proto3" json:"errorResponse,omitempty"`
	// Types that are assignable to Message:
	//	*CommonMessages_GetSystemInfoRequest
	//	*CommonMessages_GetSystemInfoResponse
	//	*CommonMessages_SetLocalSiteConfigRequest
	//	*CommonMessages_SetLocalSiteConfigResponse
	//	*CommonMessages_PerformUpdateRequest
	//	*CommonMessages_PerformUpdateResponse
	//	*CommonMessages_FactoryResetRequest
	//	*CommonMessages_FactoryResetResponse
	//	*CommonMessages_WifiScanRequest
	//	*CommonMessages_WifiScanResponse
	//	*CommonMessages_ConfigureWifiRequest
	//	*CommonMessages_ConfigureWifiResponse
	//	*CommonMessages_CheckForUpdateRequest
	//	*CommonMessages_CheckForUpdateResponse
	//	*CommonMessages_ClearUpdateRequest
	//	*CommonMessages_ClearUpdateResponse
	//	*CommonMessages_DeviceCertRequest
	//	*CommonMessages_DeviceCertResponse
	//	*CommonMessages_ConfigureWifiWithEncryptedPasswordRequest
	//	*CommonMessages_ConfigureWifiWithEncryptedPasswordResponse
	//	*CommonMessages_GetNetworkingStatusRequest
	//	*CommonMessages_GetNetworkingStatusResponse
	Message isCommonMessages_Message `protobuf_oneof:"message"`
}

func (x *CommonMessages) Reset() {
	*x = CommonMessages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonMessages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonMessages) ProtoMessage() {}

func (x *CommonMessages) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonMessages.ProtoReflect.Descriptor instead.
func (*CommonMessages) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{75}
}

func (x *CommonMessages) GetErrorResponse() int32 {
	if x != nil {
		return x.ErrorResponse
	}
	return 0
}

func (m *CommonMessages) GetMessage() isCommonMessages_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *CommonMessages) GetGetSystemInfoRequest() *CommonAPIGetSystemInfoRequest {
	if x, ok := x.GetMessage().(*CommonMessages_GetSystemInfoRequest); ok {
		return x.GetSystemInfoRequest
	}
	return nil
}

func (x *CommonMessages) GetGetSystemInfoResponse() *CommonAPIGetSystemInfoResponse {
	if x, ok := x.GetMessage().(*CommonMessages_GetSystemInfoResponse); ok {
		return x.GetSystemInfoResponse
	}
	return nil
}

func (x *CommonMessages) GetSetLocalSiteConfigRequest() *CommonAPISetLocalSiteConfigRequest {
	if x, ok := x.GetMessage().(*CommonMessages_SetLocalSiteConfigRequest); ok {
		return x.SetLocalSiteConfigRequest
	}
	return nil
}

func (x *CommonMessages) GetSetLocalSiteConfigResponse() *CommonAPISetLocalSiteConfigResponse {
	if x, ok := x.GetMessage().(*CommonMessages_SetLocalSiteConfigResponse); ok {
		return x.SetLocalSiteConfigResponse
	}
	return nil
}

func (x *CommonMessages) GetPerformUpdateRequest() *CommonAPIPerformUpdateRequest {
	if x, ok := x.GetMessage().(*CommonMessages_PerformUpdateRequest); ok {
		return x.PerformUpdateRequest
	}
	return nil
}

func (x *CommonMessages) GetPerformUpdateResponse() *CommonAPIPerformUpdateResponse {
	if x, ok := x.GetMessage().(*CommonMessages_PerformUpdateResponse); ok {
		return x.PerformUpdateResponse
	}
	return nil
}

func (x *CommonMessages) GetFactoryResetRequest() *CommonAPIFactoryResetRequest {
	if x, ok := x.GetMessage().(*CommonMessages_FactoryResetRequest); ok {
		return x.FactoryResetRequest
	}
	return nil
}

func (x *CommonMessages) GetFactoryResetResponse() *CommonAPIFactoryResetResponse {
	if x, ok := x.GetMessage().(*CommonMessages_FactoryResetResponse); ok {
		return x.FactoryResetResponse
	}
	return nil
}

func (x *CommonMessages) GetWifiScanRequest() *CommonAPIWifiScanRequest {
	if x, ok := x.GetMessage().(*CommonMessages_WifiScanRequest); ok {
		return x.WifiScanRequest
	}
	return nil
}

func (x *CommonMessages) GetWifiScanResponse() *CommonAPIWifiScanResponse {
	if x, ok := x.GetMessage().(*CommonMessages_WifiScanResponse); ok {
		return x.WifiScanResponse
	}
	return nil
}

func (x *CommonMessages) GetConfigureWifiRequest() *CommonAPIConfigureWifiRequest {
	if x, ok := x.GetMessage().(*CommonMessages_ConfigureWifiRequest); ok {
		return x.ConfigureWifiRequest
	}
	return nil
}

func (x *CommonMessages) GetConfigureWifiResponse() *CommonAPIConfigureWifiResponse {
	if x, ok := x.GetMessage().(*CommonMessages_ConfigureWifiResponse); ok {
		return x.ConfigureWifiResponse
	}
	return nil
}

func (x *CommonMessages) GetCheckForUpdateRequest() *CommonAPICheckForUpdateRequest {
	if x, ok := x.GetMessage().(*CommonMessages_CheckForUpdateRequest); ok {
		return x.CheckForUpdateRequest
	}
	return nil
}

func (x *CommonMessages) GetCheckForUpdateResponse() *CommonAPICheckForUpdateResponse {
	if x, ok := x.GetMessage().(*CommonMessages_CheckForUpdateResponse); ok {
		return x.CheckForUpdateResponse
	}
	return nil
}

func (x *CommonMessages) GetClearUpdateRequest() *CommonAPIClearUpdateRequest {
	if x, ok := x.GetMessage().(*CommonMessages_ClearUpdateRequest); ok {
		return x.ClearUpdateRequest
	}
	return nil
}

func (x *CommonMessages) GetClearUpdateResponse() *CommonAPIClearUpdateResponse {
	if x, ok := x.GetMessage().(*CommonMessages_ClearUpdateResponse); ok {
		return x.ClearUpdateResponse
	}
	return nil
}

func (x *CommonMessages) GetDeviceCertRequest() *CommonAPIDeviceCertRequest {
	if x, ok := x.GetMessage().(*CommonMessages_DeviceCertRequest); ok {
		return x.DeviceCertRequest
	}
	return nil
}

func (x *CommonMessages) GetDeviceCertResponse() *CommonAPIDeviceCertResponse {
	if x, ok := x.GetMessage().(*CommonMessages_DeviceCertResponse); ok {
		return x.DeviceCertResponse
	}
	return nil
}

func (x *CommonMessages) GetConfigureWifiWithEncryptedPasswordRequest() *CommonAPIConfigureWifiWithEncryptedPasswordRequest {
	if x, ok := x.GetMessage().(*CommonMessages_ConfigureWifiWithEncryptedPasswordRequest); ok {
		return x.ConfigureWifiWithEncryptedPasswordRequest
	}
	return nil
}

func (x *CommonMessages) GetConfigureWifiWithEncryptedPasswordResponse() *CommonAPIConfigureWifiWithEncryptedPasswordResponse {
	if x, ok := x.GetMessage().(*CommonMessages_ConfigureWifiWithEncryptedPasswordResponse); ok {
		return x.ConfigureWifiWithEncryptedPasswordResponse
	}
	return nil
}

func (x *CommonMessages) GetGetNetworkingStatusRequest() *CommonAPIGetNetworkingStatusRequest {
	if x, ok := x.GetMessage().(*CommonMessages_GetNetworkingStatusRequest); ok {
		return x.GetNetworkingStatusRequest
	}
	return nil
}

func (x *CommonMessages) GetGetNetworkingStatusResponse() *CommonAPIGetNetworkingStatusResponse {
	if x, ok := x.GetMessage().(*CommonMessages_GetNetworkingStatusResponse); ok {
		return x.GetNetworkingStatusResponse
	}
	return nil
}

type isCommonMessages_Message interface {
	isCommonMessages_Message()
}

type CommonMessages_GetSystemInfoRequest struct {
	GetSystemInfoRequest *CommonAPIGetSystemInfoRequest `protobuf:"bytes,2,opt,name=getSystemInfoRequest,proto3,oneof"`
}

type CommonMessages_GetSystemInfoResponse struct {
	GetSystemInfoResponse *CommonAPIGetSystemInfoResponse `protobuf:"bytes,3,opt,name=getSystemInfoResponse,proto3,oneof"`
}

type CommonMessages_SetLocalSiteConfigRequest struct {
	SetLocalSiteConfigRequest *CommonAPISetLocalSiteConfigRequest `protobuf:"bytes,4,opt,name=setLocalSiteConfigRequest,proto3,oneof"`
}

type CommonMessages_SetLocalSiteConfigResponse struct {
	SetLocalSiteConfigResponse *CommonAPISetLocalSiteConfigResponse `protobuf:"bytes,5,opt,name=setLocalSiteConfigResponse,proto3,oneof"`
}

type CommonMessages_PerformUpdateRequest struct {
	PerformUpdateRequest *CommonAPIPerformUpdateRequest `protobuf:"bytes,6,opt,name=performUpdateRequest,proto3,oneof"`
}

type CommonMessages_PerformUpdateResponse struct {
	PerformUpdateResponse *CommonAPIPerformUpdateResponse `protobuf:"bytes,7,opt,name=performUpdateResponse,proto3,oneof"`
}

type CommonMessages_FactoryResetRequest struct {
	FactoryResetRequest *CommonAPIFactoryResetRequest `protobuf:"bytes,8,opt,name=factoryResetRequest,proto3,oneof"`
}

type CommonMessages_FactoryResetResponse struct {
	FactoryResetResponse *CommonAPIFactoryResetResponse `protobuf:"bytes,9,opt,name=factoryResetResponse,proto3,oneof"`
}

type CommonMessages_WifiScanRequest struct {
	WifiScanRequest *CommonAPIWifiScanRequest `protobuf:"bytes,10,opt,name=wifiScanRequest,proto3,oneof"`
}

type CommonMessages_WifiScanResponse struct {
	WifiScanResponse *CommonAPIWifiScanResponse `protobuf:"bytes,11,opt,name=wifiScanResponse,proto3,oneof"`
}

type CommonMessages_ConfigureWifiRequest struct {
	ConfigureWifiRequest *CommonAPIConfigureWifiRequest `protobuf:"bytes,12,opt,name=configureWifiRequest,proto3,oneof"`
}

type CommonMessages_ConfigureWifiResponse struct {
	ConfigureWifiResponse *CommonAPIConfigureWifiResponse `protobuf:"bytes,13,opt,name=configureWifiResponse,proto3,oneof"`
}

type CommonMessages_CheckForUpdateRequest struct {
	CheckForUpdateRequest *CommonAPICheckForUpdateRequest `protobuf:"bytes,14,opt,name=checkForUpdateRequest,proto3,oneof"`
}

type CommonMessages_CheckForUpdateResponse struct {
	CheckForUpdateResponse *CommonAPICheckForUpdateResponse `protobuf:"bytes,15,opt,name=checkForUpdateResponse,proto3,oneof"`
}

type CommonMessages_ClearUpdateRequest struct {
	ClearUpdateRequest *CommonAPIClearUpdateRequest `protobuf:"bytes,16,opt,name=clearUpdateRequest,proto3,oneof"`
}

type CommonMessages_ClearUpdateResponse struct {
	ClearUpdateResponse *CommonAPIClearUpdateResponse `protobuf:"bytes,17,opt,name=clearUpdateResponse,proto3,oneof"`
}

type CommonMessages_DeviceCertRequest struct {
	DeviceCertRequest *CommonAPIDeviceCertRequest `protobuf:"bytes,18,opt,name=deviceCertRequest,proto3,oneof"`
}

type CommonMessages_DeviceCertResponse struct {
	DeviceCertResponse *CommonAPIDeviceCertResponse `protobuf:"bytes,19,opt,name=deviceCertResponse,proto3,oneof"`
}

type CommonMessages_ConfigureWifiWithEncryptedPasswordRequest struct {
	ConfigureWifiWithEncryptedPasswordRequest *CommonAPIConfigureWifiWithEncryptedPasswordRequest `protobuf:"bytes,20,opt,name=configureWifiWithEncryptedPasswordRequest,proto3,oneof"`
}

type CommonMessages_ConfigureWifiWithEncryptedPasswordResponse struct {
	ConfigureWifiWithEncryptedPasswordResponse *CommonAPIConfigureWifiWithEncryptedPasswordResponse `protobuf:"bytes,21,opt,name=configureWifiWithEncryptedPasswordResponse,proto3,oneof"`
}

type CommonMessages_GetNetworkingStatusRequest struct {
	GetNetworkingStatusRequest *CommonAPIGetNetworkingStatusRequest `protobuf:"bytes,22,opt,name=getNetworkingStatusRequest,proto3,oneof"`
}

type CommonMessages_GetNetworkingStatusResponse struct {
	GetNetworkingStatusResponse *CommonAPIGetNetworkingStatusResponse `protobuf:"bytes,23,opt,name=getNetworkingStatusResponse,proto3,oneof"`
}

func (*CommonMessages_GetSystemInfoRequest) isCommonMessages_Message() {}

func (*CommonMessages_GetSystemInfoResponse) isCommonMessages_Message() {}

func (*CommonMessages_SetLocalSiteConfigRequest) isCommonMessages_Message() {}

func (*CommonMessages_SetLocalSiteConfigResponse) isCommonMessages_Message() {}

func (*CommonMessages_PerformUpdateRequest) isCommonMessages_Message() {}

func (*CommonMessages_PerformUpdateResponse) isCommonMessages_Message() {}

func (*CommonMessages_FactoryResetRequest) isCommonMessages_Message() {}

func (*CommonMessages_FactoryResetResponse) isCommonMessages_Message() {}

func (*CommonMessages_WifiScanRequest) isCommonMessages_Message() {}

func (*CommonMessages_WifiScanResponse) isCommonMessages_Message() {}

func (*CommonMessages_ConfigureWifiRequest) isCommonMessages_Message() {}

func (*CommonMessages_ConfigureWifiResponse) isCommonMessages_Message() {}

func (*CommonMessages_CheckForUpdateRequest) isCommonMessages_Message() {}

func (*CommonMessages_CheckForUpdateResponse) isCommonMessages_Message() {}

func (*CommonMessages_ClearUpdateRequest) isCommonMessages_Message() {}

func (*CommonMessages_ClearUpdateResponse) isCommonMessages_Message() {}

func (*CommonMessages_DeviceCertRequest) isCommonMessages_Message() {}

func (*CommonMessages_DeviceCertResponse) isCommonMessages_Message() {}

func (*CommonMessages_ConfigureWifiWithEncryptedPasswordRequest) isCommonMessages_Message() {}

func (*CommonMessages_ConfigureWifiWithEncryptedPasswordResponse) isCommonMessages_Message() {}

func (*CommonMessages_GetNetworkingStatusRequest) isCommonMessages_Message() {}

func (*CommonMessages_GetNetworkingStatusResponse) isCommonMessages_Message() {}

type TEGMessages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//	*TEGMessages_GetConfigRequest
	//	*TEGMessages_GetConfigResponse
	//	*TEGMessages_SetIslandModeRequest
	//	*TEGMessages_SetIslandModeResponse
	//	*TEGMessages_TriggerIslandingBlackStartRequest
	//	*TEGMessages_TriggerIslandingBlackStartResponse
	//	*TEGMessages_TriggerAssetManifestUploadRequest
	//	*TEGMessages_TriggerAssetManifestUploadResponse
	Message isTEGMessages_Message `protobuf_oneof:"message"`
}

func (x *TEGMessages) Reset() {
	*x = TEGMessages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TEGMessages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TEGMessages) ProtoMessage() {}

func (x *TEGMessages) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TEGMessages.ProtoReflect.Descriptor instead.
func (*TEGMessages) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{76}
}

func (m *TEGMessages) GetMessage() isTEGMessages_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *TEGMessages) GetGetConfigRequest() *TEGAPIGetConfigRequest {
	if x, ok := x.GetMessage().(*TEGMessages_GetConfigRequest); ok {
		return x.GetConfigRequest
	}
	return nil
}

func (x *TEGMessages) GetGetConfigResponse() *TEGAPIGetConfigResponse {
	if x, ok := x.GetMessage().(*TEGMessages_GetConfigResponse); ok {
		return x.GetConfigResponse
	}
	return nil
}

func (x *TEGMessages) GetSetIslandModeRequest() *TEGAPISetIslandModeRequest {
	if x, ok := x.GetMessage().(*TEGMessages_SetIslandModeRequest); ok {
		return x.SetIslandModeRequest
	}
	return nil
}

func (x *TEGMessages) GetSetIslandModeResponse() *TEGAPISetIslandModeResponse {
	if x, ok := x.GetMessage().(*TEGMessages_SetIslandModeResponse); ok {
		return x.SetIslandModeResponse
	}
	return nil
}

func (x *TEGMessages) GetTriggerIslandingBlackStartRequest() *TEGAPITriggerIslandingBlackStartRequest {
	if x, ok := x.GetMessage().(*TEGMessages_TriggerIslandingBlackStartRequest); ok {
		return x.TriggerIslandingBlackStartRequest
	}
	return nil
}

func (x *TEGMessages) GetTriggerIslandingBlackStartResponse() *TEGAPITriggerIslandingBlackStartResponse {
	if x, ok := x.GetMessage().(*TEGMessages_TriggerIslandingBlackStartResponse); ok {
		return x.TriggerIslandingBlackStartResponse
	}
	return nil
}

func (x *TEGMessages) GetTriggerAssetManifestUploadRequest() *TEGAPITriggerAssetManifestUploadRequest {
	if x, ok := x.GetMessage().(*TEGMessages_TriggerAssetManifestUploadRequest); ok {
		return x.TriggerAssetManifestUploadRequest
	}
	return nil
}

func (x *TEGMessages) GetTriggerAssetManifestUploadResponse() *TEGAPITriggerAssetManifestUploadResponse {
	if x, ok := x.GetMessage().(*TEGMessages_TriggerAssetManifestUploadResponse); ok {
		return x.TriggerAssetManifestUploadResponse
	}
	return nil
}

type isTEGMessages_Message interface {
	isTEGMessages_Message()
}

type TEGMessages_GetConfigRequest struct {
	GetConfigRequest *TEGAPIGetConfigRequest `protobuf:"bytes,1,opt,name=getConfigRequest,proto3,oneof"`
}

type TEGMessages_GetConfigResponse struct {
	GetConfigResponse *TEGAPIGetConfigResponse `protobuf:"bytes,2,opt,name=getConfigResponse,proto3,oneof"`
}

type TEGMessages_SetIslandModeRequest struct {
	SetIslandModeRequest *TEGAPISetIslandModeRequest `protobuf:"bytes,3,opt,name=setIslandModeRequest,proto3,oneof"`
}

type TEGMessages_SetIslandModeResponse struct {
	SetIslandModeResponse *TEGAPISetIslandModeResponse `protobuf:"bytes,4,opt,name=setIslandModeResponse,proto3,oneof"`
}

type TEGMessages_TriggerIslandingBlackStartRequest struct {
	TriggerIslandingBlackStartRequest *TEGAPITriggerIslandingBlackStartRequest `protobuf:"bytes,5,opt,name=triggerIslandingBlackStartRequest,proto3,oneof"`
}

type TEGMessages_TriggerIslandingBlackStartResponse struct {
	TriggerIslandingBlackStartResponse *TEGAPITriggerIslandingBlackStartResponse `protobuf:"bytes,6,opt,name=triggerIslandingBlackStartResponse,proto3,oneof"`
}

type TEGMessages_TriggerAssetManifestUploadRequest struct {
	TriggerAssetManifestUploadRequest *TEGAPITriggerAssetManifestUploadRequest `protobuf:"bytes,7,opt,name=triggerAssetManifestUploadRequest,proto3,oneof"`
}

type TEGMessages_TriggerAssetManifestUploadResponse struct {
	TriggerAssetManifestUploadResponse *TEGAPITriggerAssetManifestUploadResponse `protobuf:"bytes,8,opt,name=triggerAssetManifestUploadResponse,proto3,oneof"`
}

func (*TEGMessages_GetConfigRequest) isTEGMessages_Message() {}

func (*TEGMessages_GetConfigResponse) isTEGMessages_Message() {}

func (*TEGMessages_SetIslandModeRequest) isTEGMessages_Message() {}

func (*TEGMessages_SetIslandModeResponse) isTEGMessages_Message() {}

func (*TEGMessages_TriggerIslandingBlackStartRequest) isTEGMessages_Message() {}

func (*TEGMessages_TriggerIslandingBlackStartResponse) isTEGMessages_Message() {}

func (*TEGMessages_TriggerAssetManifestUploadRequest) isTEGMessages_Message() {}

func (*TEGMessages_TriggerAssetManifestUploadResponse) isTEGMessages_Message() {}

type TEGSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TEGSettings) Reset() {
	*x = TEGSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TEGSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TEGSettings) ProtoMessage() {}

func (x *TEGSettings) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TEGSettings.ProtoReflect.Descriptor instead.
func (*TEGSettings) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{77}
}

type TEGAPIGetConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TEGAPIGetConfigRequest) Reset() {
	*x = TEGAPIGetConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TEGAPIGetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TEGAPIGetConfigRequest) ProtoMessage() {}

func (x *TEGAPIGetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TEGAPIGetConfigRequest.ProtoReflect.Descriptor instead.
func (*TEGAPIGetConfigRequest) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{78}
}

type TEGAPIGetConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings   *TEGSettings      `protobuf:"bytes,1,opt,name=settings,proto3,oneof" json:"settings,omitempty"`
	WifiConfig *WifiConfig       `protobuf:"bytes,2,opt,name=wifiConfig,proto3,oneof" json:"wifiConfig,omitempty"`
	Wifi       *NetworkInterface `protobuf:"bytes,3,opt,name=wifi,proto3,oneof" json:"wifi,omitempty"`
	Eth        *NetworkInterface `protobuf:"bytes,4,opt,name=eth,proto3,oneof" json:"eth,omitempty"`
	Gsm        *NetworkInterface `protobuf:"bytes,5,opt,name=gsm,proto3,oneof" json:"gsm,omitempty"`
}

func (x *TEGAPIGetConfigResponse) Reset() {
	*x = TEGAPIGetConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TEGAPIGetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TEGAPIGetConfigResponse) ProtoMessage() {}

func (x *TEGAPIGetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TEGAPIGetConfigResponse.ProtoReflect.Descriptor instead.
func (*TEGAPIGetConfigResponse) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{79}
}

func (x *TEGAPIGetConfigResponse) GetSettings() *TEGSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *TEGAPIGetConfigResponse) GetWifiConfig() *WifiConfig {
	if x != nil {
		return x.WifiConfig
	}
	return nil
}

func (x *TEGAPIGetConfigResponse) GetWifi() *NetworkInterface {
	if x != nil {
		return x.Wifi
	}
	return nil
}

func (x *TEGAPIGetConfigResponse) GetEth() *NetworkInterface {
	if x != nil {
		return x.Eth
	}
	return nil
}

func (x *TEGAPIGetConfigResponse) GetGsm() *NetworkInterface {
	if x != nil {
		return x.Gsm
	}
	return nil
}

type TEGAPITriggerIslandingBlackStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TEGAPITriggerIslandingBlackStartRequest) Reset() {
	*x = TEGAPITriggerIslandingBlackStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TEGAPITriggerIslandingBlackStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TEGAPITriggerIslandingBlackStartRequest) ProtoMessage() {}

func (x *TEGAPITriggerIslandingBlackStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TEGAPITriggerIslandingBlackStartRequest.ProtoReflect.Descriptor instead.
func (*TEGAPITriggerIslandingBlackStartRequest) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{80}
}

type TEGAPITriggerIslandingBlackStartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TEGAPITriggerIslandingBlackStartResponse) Reset() {
	*x = TEGAPITriggerIslandingBlackStartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TEGAPITriggerIslandingBlackStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TEGAPITriggerIslandingBlackStartResponse) ProtoMessage() {}

func (x *TEGAPITriggerIslandingBlackStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TEGAPITriggerIslandingBlackStartResponse.ProtoReflect.Descriptor instead.
func (*TEGAPITriggerIslandingBlackStartResponse) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{81}
}

type TEGAPISetIslandModeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode  int32 `protobuf:"varint,1,opt,name=mode,proto3" json:"mode,omitempty"`
	Force bool  `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *TEGAPISetIslandModeRequest) Reset() {
	*x = TEGAPISetIslandModeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TEGAPISetIslandModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TEGAPISetIslandModeRequest) ProtoMessage() {}

func (x *TEGAPISetIslandModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TEGAPISetIslandModeRequest.ProtoReflect.Descriptor instead.
func (*TEGAPISetIslandModeRequest) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{82}
}

func (x *TEGAPISetIslandModeRequest) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *TEGAPISetIslandModeRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type TEGAPISetIslandModeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *TEGAPISetIslandModeResponse) Reset() {
	*x = TEGAPISetIslandModeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TEGAPISetIslandModeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TEGAPISetIslandModeResponse) ProtoMessage() {}

func (x *TEGAPISetIslandModeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TEGAPISetIslandModeResponse.ProtoReflect.Descriptor instead.
func (*TEGAPISetIslandModeResponse) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{83}
}

func (x *TEGAPISetIslandModeResponse) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type TEGAPITriggerAssetManifestUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TEGAPITriggerAssetManifestUploadRequest) Reset() {
	*x = TEGAPITriggerAssetManifestUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TEGAPITriggerAssetManifestUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TEGAPITriggerAssetManifestUploadRequest) ProtoMessage() {}

func (x *TEGAPITriggerAssetManifestUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TEGAPITriggerAssetManifestUploadRequest.ProtoReflect.Descriptor instead.
func (*TEGAPITriggerAssetManifestUploadRequest) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{84}
}

type TEGAPITriggerAssetManifestUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TEGAPITriggerAssetManifestUploadResponse) Reset() {
	*x = TEGAPITriggerAssetManifestUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TEGAPITriggerAssetManifestUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TEGAPITriggerAssetManifestUploadResponse) ProtoMessage() {}

func (x *TEGAPITriggerAssetManifestUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TEGAPITriggerAssetManifestUploadResponse.ProtoReflect.Descriptor instead.
func (*TEGAPITriggerAssetManifestUploadResponse) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{85}
}

type EnergySiteNetMessages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//	*EnergySiteNetMessages_AddDeviceRequest
	//	*EnergySiteNetMessages_AddDeviceResponse
	//	*EnergySiteNetMessages_RemoveDeviceRequest
	//	*EnergySiteNetMessages_RemoveDeviceResponse
	//	*EnergySiteNetMessages_GetConfigRequest
	//	*EnergySiteNetMessages_GetConfigResponse
	Message isEnergySiteNetMessages_Message `protobuf_oneof:"message"`
}

func (x *EnergySiteNetMessages) Reset() {
	*x = EnergySiteNetMessages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnergySiteNetMessages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergySiteNetMessages) ProtoMessage() {}

func (x *EnergySiteNetMessages) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergySiteNetMessages.ProtoReflect.Descriptor instead.
func (*EnergySiteNetMessages) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{86}
}

func (m *EnergySiteNetMessages) GetMessage() isEnergySiteNetMessages_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *EnergySiteNetMessages) GetAddDeviceRequest() *EnergySiteNetAPIAddDeviceRequest {
	if x, ok := x.GetMessage().(*EnergySiteNetMessages_AddDeviceRequest); ok {
		return x.AddDeviceRequest
	}
	return nil
}

func (x *EnergySiteNetMessages) GetAddDeviceResponse() *EnergySiteNetAPIAddDeviceResponse {
	if x, ok := x.GetMessage().(*EnergySiteNetMessages_AddDeviceResponse); ok {
		return x.AddDeviceResponse
	}
	return nil
}

func (x *EnergySiteNetMessages) GetRemoveDeviceRequest() *EnergySiteNetAPIRemoveDeviceRequest {
	if x, ok := x.GetMessage().(*EnergySiteNetMessages_RemoveDeviceRequest); ok {
		return x.RemoveDeviceRequest
	}
	return nil
}

func (x *EnergySiteNetMessages) GetRemoveDeviceResponse() *EnergySiteNetAPIRemoveDeviceResponse {
	if x, ok := x.GetMessage().(*EnergySiteNetMessages_RemoveDeviceResponse); ok {
		return x.RemoveDeviceResponse
	}
	return nil
}

func (x *EnergySiteNetMessages) GetGetConfigRequest() *EnergySiteNetAPIGetConfigRequest {
	if x, ok := x.GetMessage().(*EnergySiteNetMessages_GetConfigRequest); ok {
		return x.GetConfigRequest
	}
	return nil
}

func (x *EnergySiteNetMessages) GetGetConfigResponse() *EnergySiteNetAPIGetConfigResponse {
	if x, ok := x.GetMessage().(*EnergySiteNetMessages_GetConfigResponse); ok {
		return x.GetConfigResponse
	}
	return nil
}

type isEnergySiteNetMessages_Message interface {
	isEnergySiteNetMessages_Message()
}

type EnergySiteNetMessages_AddDeviceRequest struct {
	AddDeviceRequest *EnergySiteNetAPIAddDeviceRequest `protobuf:"bytes,1,opt,name=addDeviceRequest,proto3,oneof"`
}

type EnergySiteNetMessages_AddDeviceResponse struct {
	AddDeviceResponse *EnergySiteNetAPIAddDeviceResponse `protobuf:"bytes,2,opt,name=addDeviceResponse,proto3,oneof"`
}

type EnergySiteNetMessages_RemoveDeviceRequest struct {
	RemoveDeviceRequest *EnergySiteNetAPIRemoveDeviceRequest `protobuf:"bytes,3,opt,name=removeDeviceRequest,proto3,oneof"`
}

type EnergySiteNetMessages_RemoveDeviceResponse struct {
	RemoveDeviceResponse *EnergySiteNetAPIRemoveDeviceResponse `protobuf:"bytes,4,opt,name=removeDeviceResponse,proto3,oneof"`
}

type EnergySiteNetMessages_GetConfigRequest struct {
	GetConfigRequest *EnergySiteNetAPIGetConfigRequest `protobuf:"bytes,5,opt,name=getConfigRequest,proto3,oneof"`
}

type EnergySiteNetMessages_GetConfigResponse struct {
	GetConfigResponse *EnergySiteNetAPIGetConfigResponse `protobuf:"bytes,6,opt,name=getConfigResponse,proto3,oneof"`
}

func (*EnergySiteNetMessages_AddDeviceRequest) isEnergySiteNetMessages_Message() {}

func (*EnergySiteNetMessages_AddDeviceResponse) isEnergySiteNetMessages_Message() {}

func (*EnergySiteNetMessages_RemoveDeviceRequest) isEnergySiteNetMessages_Message() {}

func (*EnergySiteNetMessages_RemoveDeviceResponse) isEnergySiteNetMessages_Message() {}

func (*EnergySiteNetMessages_GetConfigRequest) isEnergySiteNetMessages_Message() {}

func (*EnergySiteNetMessages_GetConfigResponse) isEnergySiteNetMessages_Message() {}

type LocalAuthAPIRequiredFactorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LocalAuthAPIRequiredFactorsRequest) Reset() {
	*x = LocalAuthAPIRequiredFactorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalAuthAPIRequiredFactorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalAuthAPIRequiredFactorsRequest) ProtoMessage() {}

func (x *LocalAuthAPIRequiredFactorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalAuthAPIRequiredFactorsRequest.ProtoReflect.Descriptor instead.
func (*LocalAuthAPIRequiredFactorsRequest) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{87}
}

type LocalAuthAPIRequiredFactorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password bool `protobuf:"varint,1,opt,name=password,proto3" json:"password,omitempty"`
	Presence bool `protobuf:"varint,2,opt,name=presence,proto3" json:"presence,omitempty"`
}

func (x *LocalAuthAPIRequiredFactorsResponse) Reset() {
	*x = LocalAuthAPIRequiredFactorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalAuthAPIRequiredFactorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalAuthAPIRequiredFactorsResponse) ProtoMessage() {}

func (x *LocalAuthAPIRequiredFactorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalAuthAPIRequiredFactorsResponse.ProtoReflect.Descriptor instead.
func (*LocalAuthAPIRequiredFactorsResponse) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{88}
}

func (x *LocalAuthAPIRequiredFactorsResponse) GetPassword() bool {
	if x != nil {
		return x.Password
	}
	return false
}

func (x *LocalAuthAPIRequiredFactorsResponse) GetPresence() bool {
	if x != nil {
		return x.Presence
	}
	return false
}

type LocalAuthAPILoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Participant int32         `protobuf:"varint,1,opt,name=Participant,proto3" json:"Participant,omitempty"`
	Email       string        `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Password    *WifiPassword `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LocalAuthAPILoginRequest) Reset() {
	*x = LocalAuthAPILoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalAuthAPILoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalAuthAPILoginRequest) ProtoMessage() {}

func (x *LocalAuthAPILoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalAuthAPILoginRequest.ProtoReflect.Descriptor instead.
func (*LocalAuthAPILoginRequest) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{89}
}

func (x *LocalAuthAPILoginRequest) GetParticipant() int32 {
	if x != nil {
		return x.Participant
	}
	return 0
}

func (x *LocalAuthAPILoginRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *LocalAuthAPILoginRequest) GetPassword() *WifiPassword {
	if x != nil {
		return x.Password
	}
	return nil
}

type LocalAuthAPILoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *LocalAuthAPILoginResponse) Reset() {
	*x = LocalAuthAPILoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalAuthAPILoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalAuthAPILoginResponse) ProtoMessage() {}

func (x *LocalAuthAPILoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalAuthAPILoginResponse.ProtoReflect.Descriptor instead.
func (*LocalAuthAPILoginResponse) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{90}
}

func (x *LocalAuthAPILoginResponse) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type LocalAuthAPILogoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LocalAuthAPILogoutRequest) Reset() {
	*x = LocalAuthAPILogoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalAuthAPILogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalAuthAPILogoutRequest) ProtoMessage() {}

func (x *LocalAuthAPILogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalAuthAPILogoutRequest.ProtoReflect.Descriptor instead.
func (*LocalAuthAPILogoutRequest) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{91}
}

type LocalAuthAPILogoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LocalAuthAPILogoutResponse) Reset() {
	*x = LocalAuthAPILogoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalAuthAPILogoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalAuthAPILogoutResponse) ProtoMessage() {}

func (x *LocalAuthAPILogoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalAuthAPILogoutResponse.ProtoReflect.Descriptor instead.
func (*LocalAuthAPILogoutResponse) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{92}
}

type LocalAuthAPICheckAuthStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LocalAuthAPICheckAuthStatusRequest) Reset() {
	*x = LocalAuthAPICheckAuthStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalAuthAPICheckAuthStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalAuthAPICheckAuthStatusRequest) ProtoMessage() {}

func (x *LocalAuthAPICheckAuthStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalAuthAPICheckAuthStatusRequest.ProtoReflect.Descriptor instead.
func (*LocalAuthAPICheckAuthStatusRequest) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{93}
}

type LocalAuthAPICheckAuthStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *LocalAuthAPICheckAuthStatusResponse) Reset() {
	*x = LocalAuthAPICheckAuthStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tesla_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalAuthAPICheckAuthStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalAuthAPICheckAuthStatusResponse) ProtoMessage() {}

func (x *LocalAuthAPICheckAuthStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tesla_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalAuthAPICheckAuthStatusResponse.ProtoReflect.Descriptor instead.
func (*LocalAuthAPICheckAuthStatusResponse) Descriptor() ([]byte, []int) {
	return file_tesla_proto_rawDescGZIP(), []int{94}
}

func (x *LocalAuthAPICheckAuthStatusResponse) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

var File_tesla_proto protoreflect.FileDescriptor

var file_tesla_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x74,
	0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x40, 0x0a, 0x0c, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x41, 0x75, 0x74, 0x68, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x03, 0x64, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x64, 0x69, 0x6e, 0x12, 0x24, 0x0a, 0x0c, 0x74,
	0x65, 0x73, 0x6c, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x0c, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x16, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x10, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x10, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x04, 0x0a, 0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a,
	0x05, 0x45, 0x63, 0x75, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x1b, 0x0a, 0x03, 0x44, 0x69,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x45, 0x0a, 0x0f, 0x46, 0x69, 0x72, 0x6d, 0x77,
	0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x69, 0x74, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x69, 0x74, 0x68, 0x61, 0x73, 0x68, 0x22, 0x9f,
	0x01, 0x0a, 0x11, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e,
	0x65, 0x72, 0x67, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x57, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x57, 0x68,
	0x12, 0x2a, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x63, 0x63, 0x75,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x07,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36,
	0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x07, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x53, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53,
	0x22, 0xab, 0x03, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x74, 0x41, 0x43, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67,
	0x65, 0x56, 0x72, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x76, 0x6f, 0x6c,
	0x74, 0x61, 0x67, 0x65, 0x56, 0x72, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x48, 0x7a, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x66,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x48, 0x7a, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x46, 0x6c, 0x6f,
	0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x41, 0x72, 0x6d, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x0a, 0x72, 0x65, 0x61,
	0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x57, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x6c, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x57, 0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x10, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x56, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x46, 0x6c,
	0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x02, 0x52, 0x10, 0x72, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x56, 0x61, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x45, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x56, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x48, 0x03, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x56, 0x61, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x41, 0x72, 0x6d, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x57, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x56, 0x61, 0x72, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x61,
	0x70, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x56, 0x61, 0x22, 0x75,
	0x0a, 0x11, 0x49, 0x6e, 0x73, 0x74, 0x44, 0x43, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x56, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x56, 0x12,
	0x37, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x46,
	0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x41, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x41, 0x22, 0xab, 0x01, 0x0a, 0x14, 0x47, 0x72, 0x69, 0x64, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x67, 0x72, 0x69, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x67, 0x72, 0x69, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x58, 0x0a, 0x18,
	0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x55, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x18, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x66, 0x79, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x53, 0x88, 0x01, 0x01, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x66, 0x79, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x53, 0x22, 0xaa, 0x01, 0x0a, 0x1a, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x50, 0x76, 0x34, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x68, 0x63, 0x70, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x68, 0x63, 0x70, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x07, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x07, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x07, 0x52,
	0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6e, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x07, 0x52, 0x03, 0x64, 0x6e, 0x73, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02,
	0x22, 0x8a, 0x01, 0x0a, 0x04, 0x52, 0x73, 0x73, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x52, 0x0a, 0x15, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x55, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x15, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x53, 0x74,
	0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0x8a, 0x02,
	0x0a, 0x19, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x12,
	0x29, 0x0a, 0x04, 0x72, 0x73, 0x73, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x52, 0x73, 0x73, 0x69, 0x48,
	0x00, 0x52, 0x04, 0x72, 0x73, 0x73, 0x69, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x03, 0x73, 0x6e,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48,
	0x01, 0x52, 0x03, 0x73, 0x6e, 0x72, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x72, 0x73,
	0x73, 0x69, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x6e, 0x72, 0x22, 0xbd, 0x02, 0x0a, 0x10, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x69,
	0x70, 0x76, 0x34, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x50, 0x76,
	0x34, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x70, 0x76, 0x34, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x12, 0x5a, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x01, 0x52, 0x12, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x24, 0x0a, 0x0c, 0x57, 0x69,
	0x66, 0x69, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x4a, 0x0a, 0x10, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x22, 0x88, 0x01, 0x0a,
	0x0a, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x73, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x27, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0xad, 0x01, 0x0a, 0x0b, 0x57, 0x69, 0x66, 0x69,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x73, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x73, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x73, 0x73, 0x69, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x09,
	0x72, 0x73, 0x73, 0x69, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x72, 0x73, 0x73,
	0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x2e, 0x52, 0x73, 0x73, 0x69, 0x48, 0x00, 0x52, 0x04, 0x72, 0x73, 0x73,
	0x69, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0c, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x72, 0x73, 0x73, 0x69, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa8, 0x03, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x68, 0x61, 0x6e, 0x64,
	0x73, 0x68, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x52, 0x0a, 0x13, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x2e, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x13, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x67, 0x65, 0x64,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x62, 0x79, 0x74, 0x65, 0x73, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x17,
	0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x50, 0x65,
	0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x65,
	0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x50, 0x65, 0x72,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x36, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x61,
	0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x61, 0x6e, 0x64,
	0x73, 0x68, 0x61, 0x6b, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2a,
	0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x67, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x4b, 0x0a, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x1f, 0x0a, 0x1d, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x47, 0x65, 0x74, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0xad, 0x02, 0x0a, 0x1e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x47, 0x65,
	0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x2e, 0x45, 0x63, 0x75, 0x49, 0x64, 0x48, 0x00, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x6e, 0x12, 0x4a, 0x0a, 0x0f, 0x66, 0x69, 0x72,
	0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e,
	0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x48,
	0x01, 0x52, 0x0f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x0c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x65,
	0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x02, 0x52, 0x0c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61,
	0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05,
	0x22, 0x24, 0x0a, 0x22, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x53, 0x65, 0x74,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x25, 0x0a, 0x23, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x41, 0x50, 0x49, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x0a,
	0x1e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46,
	0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x21, 0x0a, 0x1f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x1e, 0x0a, 0x1c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x50, 0x65,
	0x72, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x20, 0x0a, 0x1e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x50,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50,
	0x49, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x1f, 0x0a, 0x1d, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50,
	0x49, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x0a, 0x23, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41,
	0x50, 0x49, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xac, 0x02, 0x0a,
	0x24, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x77, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x65, 0x73, 0x6c,
	0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x48, 0x00, 0x52, 0x0a, 0x77, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88,
	0x01, 0x01, 0x12, 0x35, 0x0a, 0x04, 0x77, 0x69, 0x66, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x48, 0x01,
	0x52, 0x04, 0x77, 0x69, 0x66, 0x69, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x03, 0x65, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f,
	0x77, 0x65, 0x72, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x48, 0x02, 0x52, 0x03, 0x65, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x33,
	0x0a, 0x03, 0x67, 0x73, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65,
	0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x48, 0x03, 0x52, 0x03, 0x67, 0x73, 0x6d,
	0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x65, 0x74, 0x68, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x67, 0x73, 0x6d, 0x22, 0xa4, 0x01, 0x0a, 0x18,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x57, 0x69, 0x66, 0x69, 0x53, 0x63, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x53,
	0x63, 0x61, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x53, 0x63, 0x61, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x12, 0x32, 0x0a, 0x14, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x14, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x69,
	0x6d, 0x75, 0x6d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41,
	0x70, 0x73, 0x22, 0x58, 0x0a, 0x19, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x57,
	0x69, 0x66, 0x69, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3b, 0x0a, 0x0c, 0x77, 0x69, 0x66, 0x69, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x0c,
	0x77, 0x69, 0x66, 0x69, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x22, 0x85, 0x01, 0x0a,
	0x1d, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x57, 0x69, 0x66, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x3b, 0x0a, 0x0a, 0x77, 0x69, 0x66, 0x69,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74,
	0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x77, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0xac, 0x01, 0x0a, 0x1e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41,
	0x50, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x57, 0x69, 0x66, 0x69, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x77, 0x69, 0x66, 0x69, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x65,
	0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x77, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x04, 0x77, 0x69, 0x66, 0x69, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x48, 0x01, 0x52, 0x04, 0x77, 0x69, 0x66, 0x69, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x77, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x77,
	0x69, 0x66, 0x69, 0x22, 0x81, 0x02, 0x0a, 0x32, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50,
	0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x57, 0x69, 0x66, 0x69, 0x57, 0x69,
	0x74, 0x68, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x3b, 0x0a, 0x0a, 0x77, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x48, 0x00, 0x52, 0x0a, 0x77, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01,
	0x01, 0x12, 0x4f, 0x0a, 0x11, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74,
	0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x01, 0x52, 0x11, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x88,
	0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xd9, 0x01, 0x0a, 0x33, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x57, 0x69,
	0x66, 0x69, 0x57, 0x69, 0x74, 0x68, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3b, 0x0a, 0x0a, 0x77, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x2e, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x77,
	0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x04,
	0x77, 0x69, 0x66, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x73,
	0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x48, 0x01, 0x52, 0x04, 0x77, 0x69, 0x66, 0x69,
	0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x77, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x77,
	0x69, 0x66, 0x69, 0x22, 0x1c, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x55, 0x0a, 0x1b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x65, 0x72, 0x74, 0x22, 0x1e, 0x0a, 0x08, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x4c, 0x6f, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x06, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x21, 0x0a, 0x0b, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x97, 0x01, 0x0a, 0x13,
	0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53, 0x69, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x64, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x44, 0x69,
	0x6e, 0x48, 0x00, 0x52, 0x03, 0x64, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x0c, 0x77,
	0x69, 0x66, 0x69, 0x41, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x57,
	0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x01, 0x52, 0x0c, 0x77, 0x69, 0x66,
	0x69, 0x41, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x64, 0x69, 0x6e, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x41, 0x70, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x6a, 0x0a, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53,
	0x69, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x41, 0x64,
	0x64, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x64, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f,
	0x77, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x64, 0x69, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x64, 0x69,
	0x6e, 0x22, 0x6c, 0x0a, 0x22, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53, 0x69, 0x74, 0x65, 0x4e,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x64, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x2e, 0x44, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x64, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x64, 0x69, 0x6e, 0x22,
	0xfe, 0x01, 0x0a, 0x13, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53, 0x69, 0x74, 0x65, 0x4e, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x39, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53, 0x69, 0x74, 0x65,
	0x4e, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x12, 0x52, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x41, 0x64,
	0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x74, 0x65, 0x73, 0x6c,
	0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53, 0x69, 0x74,
	0x65, 0x4e, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x41, 0x64, 0x64, 0x65,
	0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c,
	0x79, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x58, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74,
	0x6c, 0x79, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x65,
	0x72, 0x67, 0x79, 0x53, 0x69, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74,
	0x6c, 0x79, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x0f, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64,
	0x22, 0x5b, 0x0a, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53, 0x69, 0x74, 0x65, 0x4e, 0x65,
	0x74, 0x41, 0x50, 0x49, 0x41, 0x64, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53, 0x69, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x77, 0x0a,
	0x21, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53, 0x69, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x41, 0x50,
	0x49, 0x41, 0x64, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x41, 0x64,
	0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x74, 0x65, 0x73, 0x6c,
	0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53, 0x69, 0x74,
	0x65, 0x4e, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x41, 0x64, 0x64, 0x65,
	0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c,
	0x79, 0x41, 0x64, 0x64, 0x65, 0x64, 0x22, 0x48, 0x0a, 0x23, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
	0x53, 0x69, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x41, 0x50, 0x49, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x03, 0x64, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x65, 0x73,
	0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x6e,
	0x22, 0x80, 0x01, 0x0a, 0x24, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53, 0x69, 0x74, 0x65, 0x4e,
	0x65, 0x74, 0x41, 0x50, 0x49, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x72, 0x65, 0x63,
	0x65, 0x6e, 0x74, 0x6c, 0x79, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e,
	0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53, 0x69, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x65, 0x6e, 0x74, 0x6c, 0x79, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x64, 0x22, 0x22, 0x0a, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53, 0x69, 0x74,
	0x65, 0x4e, 0x65, 0x74, 0x41, 0x50, 0x49, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5c, 0x0a, 0x21, 0x45, 0x6e, 0x65, 0x72, 0x67,
	0x79, 0x53, 0x69, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x41, 0x50, 0x49, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74,
	0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
	0x53, 0x69, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xbc, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x56, 0x69, 0x74, 0x61, 0x6c, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c,
	0x0a, 0x08, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0a,
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x48, 0x00, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22,
	0x0a, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1e, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x23, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x23, 0x0a, 0x0b, 0x55, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x22,
	0x0a, 0x0a, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x23, 0x0a, 0x0b, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x22, 0x0a, 0x0a, 0x46, 0x6c, 0x6f, 0x61, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8f, 0x02, 0x0a, 0x14,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x3a, 0x0a, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x48, 0x00, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x3c, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x01, 0x52,
	0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23,
	0x0a, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x61, 0x75, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x02, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x61, 0x75, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x03, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x6f, 0x72,
	0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x61, 0x75, 0x64,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x49, 0x64, 0x22, 0xe3, 0x01,
	0x0a, 0x0f, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x49,
	0x64, 0x12, 0x34, 0x0a, 0x06, 0x70, 0x63, 0x62, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x55,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x06, 0x70, 0x63,
	0x62, 0x61, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x6d,
	0x62, 0x6c, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65,
	0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x48, 0x01, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x07, 0x75, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f,
	0x77, 0x65, 0x72, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48,
	0x02, 0x52, 0x07, 0x75, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x70, 0x63, 0x62, 0x61, 0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x73, 0x73,
	0x65, 0x6d, 0x62, 0x6c, 0x79, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x22, 0xd9, 0x02, 0x0a, 0x18, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x45, 0x6e, 0x65,
	0x72, 0x67, 0x79, 0x45, 0x63, 0x75, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x63, 0x75, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x65, 0x63, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x68, 0x61,
	0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x73, 0x6c,
	0x61, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x68,
	0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x59, 0x0a, 0x14,
	0x70, 0x76, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x65, 0x73,
	0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x50, 0x56, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x74,
	0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x48, 0x01, 0x52, 0x14,
	0x70, 0x76, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x4a, 0x0a, 0x0f, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x4d, 0x65,
	0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x48, 0x02, 0x52,
	0x0f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65,
	0x49, 0x64, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x70, 0x76, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65,
	0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22,
	0x83, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x6e, 0x61, 0x6d, 0x65, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x57, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x6e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x57, 0x12, 0x3a, 0x0a, 0x18, 0x6e, 0x61, 0x6d,
	0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x56, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x18, 0x6e, 0x61, 0x6d,
	0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x56, 0x61, 0x22, 0x48, 0x0a, 0x14, 0x50, 0x56, 0x49, 0x6e, 0x76, 0x65, 0x72,
	0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x30, 0x0a,
	0x13, 0x6e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x6c, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x57, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x6e, 0x61, 0x6d, 0x65,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x57, 0x22,
	0x37, 0x0a, 0x0f, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x80, 0x03, 0x0a, 0x10, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x62, 0x0a,
	0x18, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x45, 0x63, 0x75, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x73,
	0x6c, 0x61, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x45, 0x63, 0x75, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x48, 0x00, 0x52, 0x18, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x45, 0x6e,
	0x65, 0x72, 0x67, 0x79, 0x45, 0x63, 0x75, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x53, 0x0a, 0x13, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x48,
	0x00, 0x52, 0x13, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x14, 0x70, 0x76, 0x49, 0x6e, 0x76, 0x65,
	0x72, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x2e, 0x50, 0x56, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x48, 0x00, 0x52, 0x14, 0x70, 0x76, 0x49, 0x6e, 0x76, 0x65,
	0x72, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x47,
	0x0a, 0x0f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0xfb, 0x07, 0x0a, 0x06,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x03, 0x64, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x03,
	0x64, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x73,
	0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x48, 0x01, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x73,
	0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x48, 0x02, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74,
	0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x03, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x09, 0x73, 0x69, 0x74, 0x65,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65,
	0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x48, 0x04, 0x52, 0x09, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x4c, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x05, 0x52, 0x12, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x46, 0x0a, 0x0f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65,
	0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x48, 0x06, 0x52, 0x0f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x57, 0x0a, 0x16, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x07, 0x52, 0x16, 0x66, 0x69, 0x72, 0x73, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x55, 0x0a, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x08,
	0x52, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x59, 0x0a, 0x14, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x48, 0x09, 0x52, 0x14, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x48, 0x0a, 0x52,
	0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x64, 0x69, 0x6e, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x15, 0x0a, 0x13, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44,
	0x69, 0x6e, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x17, 0x0a, 0x15, 0x5f,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x5b, 0x0a, 0x1d, 0x53, 0x69, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x65, 0x73,
	0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x48, 0x00,
	0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x27, 0x53, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x57, 0x69, 0x74, 0x68, 0x56, 0x69, 0x74, 0x61,
	0x6c, 0x73, 0x12, 0x41, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e,
	0x53, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x76, 0x69, 0x74, 0x61, 0x6c, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x69, 0x74, 0x61, 0x6c, 0x52, 0x06,
	0x76, 0x69, 0x74, 0x61, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x22, 0x62,
	0x0a, 0x11, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x56, 0x69, 0x74,
	0x61, 0x6c, 0x73, 0x12, 0x4d, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x57,
	0x69, 0x74, 0x68, 0x56, 0x69, 0x74, 0x61, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x22, 0x53, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x6f, 0x0a, 0x1d, 0x73, 0x69, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x53, 0x69,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x1d, 0x73, 0x69, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x6b, 0x0a, 0x19, 0x42, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x6f, 0x6d, 0x69, 0x6e,
	0x61, 0x6c, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x57, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0f, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x57,
	0x68, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x57, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61,
	0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x57, 0x22, 0x66, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x2e, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0xab, 0x03, 0x0a, 0x08, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x44, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x44, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x68, 0x0a, 0x19, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x48, 0x00,
	0x52, 0x19, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x54,
	0x0a, 0x16, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x01, 0x52, 0x16, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x46, 0x69,
	0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xdc, 0x02,
	0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x2f, 0x0a, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65,
	0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x09,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x48,
	0x00, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x03, 0x74, 0x65, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f,
	0x77, 0x65, 0x72, 0x2e, 0x54, 0x45, 0x47, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x48,
	0x00, 0x52, 0x03, 0x74, 0x65, 0x67, 0x12, 0x49, 0x0a, 0x0d, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79,
	0x73, 0x69, 0x74, 0x65, 0x6e, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67,
	0x79, 0x53, 0x69, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x48, 0x00, 0x52, 0x0d, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x73, 0x69, 0x74, 0x65, 0x6e, 0x65,
	0x74, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xbe, 0x12, 0x0a,
	0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x14, 0x67, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x62, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x47, 0x65, 0x74, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x15, 0x67, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x19, 0x73, 0x65,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x41, 0x50, 0x49, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x69, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x19, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x71, 0x0a, 0x1a, 0x73, 0x65,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x41, 0x50, 0x49, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x69, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x1a, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a,
	0x14, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x65,
	0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41,
	0x50, 0x49, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72,
	0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x62,
	0x0a, 0x15, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x41, 0x50, 0x49, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x15, 0x70, 0x65, 0x72,
	0x66, 0x6f, 0x72, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5c, 0x0a, 0x13, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x66, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x5f, 0x0a, 0x14, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x41, 0x50, 0x49, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x14, 0x66, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x50, 0x0a, 0x0f, 0x77, 0x69, 0x66, 0x69, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x65, 0x73,
	0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50,
	0x49, 0x57, 0x69, 0x66, 0x69, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x0f, 0x77, 0x69, 0x66, 0x69, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x10, 0x77, 0x69, 0x66, 0x69, 0x53, 0x63, 0x61, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x41, 0x50, 0x49, 0x57, 0x69, 0x66, 0x69, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x10, 0x77, 0x69, 0x66, 0x69, 0x53, 0x63, 0x61, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x57, 0x69, 0x66, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f,
	0x77, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x57, 0x69, 0x66, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x57, 0x69,
	0x66, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x62, 0x0a, 0x15, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x57, 0x69, 0x66, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x57, 0x69, 0x66, 0x69, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x65, 0x57, 0x69, 0x66, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a,
	0x15, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74,
	0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x41, 0x50, 0x49, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x15, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x65, 0x0a, 0x16, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x6f, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x16, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x12, 0x63, 0x6c, 0x65, 0x61,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x12, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x5c, 0x0a, 0x13, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x63, 0x6c,
	0x65, 0x61, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x56, 0x0a, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x65, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74,
	0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x41, 0x50, 0x49, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x12, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9e, 0x01, 0x0a, 0x29, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x57, 0x69, 0x66, 0x69, 0x57, 0x69, 0x74, 0x68, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x65, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x57, 0x69, 0x66, 0x69, 0x57, 0x69, 0x74, 0x68,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x29, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x57, 0x69, 0x66, 0x69, 0x57, 0x69, 0x74, 0x68, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0xa1, 0x01, 0x0a, 0x2a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x57, 0x69, 0x66, 0x69, 0x57, 0x69, 0x74, 0x68, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x65, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x74, 0x65, 0x73,
	0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50,
	0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x57, 0x69, 0x66, 0x69, 0x57, 0x69,
	0x74, 0x68, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x2a, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x57, 0x69, 0x66, 0x69, 0x57, 0x69, 0x74, 0x68,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x1a, 0x67, 0x65, 0x74,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x41, 0x50, 0x49, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x1a, 0x67, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x74, 0x0a, 0x1b,
	0x67, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1b, 0x67, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x9c, 0x07,
	0x0a, 0x0b, 0x54, 0x45, 0x47, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x50, 0x0a,
	0x10, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x2e, 0x54, 0x45, 0x47, 0x41, 0x50, 0x49, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x67,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x53, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x65, 0x73,
	0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x54, 0x45, 0x47, 0x41, 0x50, 0x49, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x11, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x14, 0x73, 0x65, 0x74, 0x49, 0x73, 0x6c, 0x61, 0x6e,
	0x64, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e,
	0x54, 0x45, 0x47, 0x41, 0x50, 0x49, 0x53, 0x65, 0x74, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x4d,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x73, 0x65,
	0x74, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x5f, 0x0a, 0x15, 0x73, 0x65, 0x74, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x4d,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x54,
	0x45, 0x47, 0x41, 0x50, 0x49, 0x53, 0x65, 0x74, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x15, 0x73, 0x65,
	0x74, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x21, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x49,
	0x73, 0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x54, 0x45, 0x47,
	0x41, 0x50, 0x49, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x21, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x49,
	0x73, 0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x86, 0x01, 0x0a, 0x22, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f,
	0x77, 0x65, 0x72, 0x2e, 0x54, 0x45, 0x47, 0x41, 0x50, 0x49, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x22,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x21, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x54, 0x45, 0x47, 0x41,
	0x50, 0x49, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4d, 0x61,
	0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x21, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x86, 0x01, 0x0a, 0x22, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73,
	0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x2e, 0x54, 0x45, 0x47, 0x41, 0x50, 0x49, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x22, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x69, 0x66,
	0x65, 0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x0d, 0x0a, 0x0b,
	0x54, 0x45, 0x47, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x18, 0x0a, 0x16, 0x54,
	0x45, 0x47, 0x41, 0x50, 0x49, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xe6, 0x02, 0x0a, 0x17, 0x54, 0x45, 0x47, 0x41, 0x50, 0x49,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x2e, 0x54, 0x45, 0x47, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x48, 0x00, 0x52, 0x08,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x0a, 0x77,
	0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x57, 0x69, 0x66,
	0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x01, 0x52, 0x0a, 0x77, 0x69, 0x66, 0x69, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x04, 0x77, 0x69, 0x66, 0x69,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f,
	0x77, 0x65, 0x72, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x48, 0x02, 0x52, 0x04, 0x77, 0x69, 0x66, 0x69, 0x88, 0x01, 0x01, 0x12,
	0x33, 0x0a, 0x03, 0x65, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74,
	0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x48, 0x03, 0x52, 0x03, 0x65, 0x74,
	0x68, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x03, 0x67, 0x73, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x48,
	0x04, 0x52, 0x03, 0x67, 0x73, 0x6d, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x65, 0x74, 0x68, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x67, 0x73, 0x6d, 0x22, 0x29,
	0x0a, 0x27, 0x54, 0x45, 0x47, 0x41, 0x50, 0x49, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x49,
	0x73, 0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2a, 0x0a, 0x28, 0x54, 0x45, 0x47,
	0x41, 0x50, 0x49, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x0a, 0x1a, 0x54, 0x45, 0x47, 0x41, 0x50, 0x49, 0x53,
	0x65, 0x74, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x35, 0x0a,
	0x1b, 0x54, 0x45, 0x47, 0x41, 0x50, 0x49, 0x53, 0x65, 0x74, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x29, 0x0a, 0x27, 0x54, 0x45, 0x47, 0x41, 0x50, 0x49, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65,
	0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x2a, 0x0a, 0x28, 0x54, 0x45, 0x47, 0x41, 0x50, 0x49, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe5, 0x04, 0x0a, 0x15,
	0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53, 0x69, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x10, 0x61, 0x64, 0x64, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x65,
	0x72, 0x67, 0x79, 0x53, 0x69, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x41, 0x50, 0x49, 0x41, 0x64, 0x64,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x10, 0x61, 0x64, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x5d, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x74,
	0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
	0x53, 0x69, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x41, 0x50, 0x49, 0x41, 0x64, 0x64, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x11, 0x61,
	0x64, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x63, 0x0a, 0x13, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67,
	0x79, 0x53, 0x69, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x41, 0x50, 0x49, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x13, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x66, 0x0a, 0x14, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53, 0x69, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x41, 0x50,
	0x49, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x14, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a,
	0x10, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53, 0x69, 0x74, 0x65, 0x4e,
	0x65, 0x74, 0x41, 0x50, 0x49, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x11, 0x67, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53, 0x69, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x41,
	0x50, 0x49, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x11, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x24, 0x0a, 0x22, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x75, 0x74, 0x68,
	0x41, 0x50, 0x49, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5d, 0x0a, 0x23, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x41, 0x50, 0x49, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x18, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x41, 0x50, 0x49, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x34, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x57, 0x69, 0x66,
	0x69, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x22, 0x33, 0x0a, 0x19, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x75, 0x74, 0x68,
	0x41, 0x50, 0x49, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x41, 0x75, 0x74, 0x68, 0x41, 0x50, 0x49, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x75,
	0x74, 0x68, 0x41, 0x50, 0x49, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x24, 0x0a, 0x22, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x75, 0x74, 0x68,
	0x41, 0x50, 0x49, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3d, 0x0a, 0x23, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x41, 0x50, 0x49, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x75,
	0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2a, 0x97, 0x01, 0x0a, 0x10, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x1a, 0x45, 0x58, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a,
	0x1b, 0x45, 0x58, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x01, 0x12, 0x1b,
	0x0a, 0x17, 0x45, 0x58, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x54, 0x4c, 0x53, 0x10, 0x02, 0x12, 0x25, 0x0a, 0x21, 0x45,
	0x58, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x48, 0x45, 0x52, 0x4d, 0x45, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44,
	0x10, 0x04, 0x2a, 0x90, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x18, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45,
	0x52, 0x59, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x5f, 0x48,
	0x54, 0x54, 0x50, 0x53, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45,
	0x52, 0x59, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x48, 0x45, 0x52, 0x4d, 0x45,
	0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x44,
	0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x42, 0x4c, 0x45, 0x10, 0x03, 0x2a, 0x44, 0x0a, 0x0c, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x45, 0x53, 0x4c, 0x41, 0x5f, 0x53,
	0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x19, 0x0a, 0x15, 0x54, 0x45, 0x53, 0x4c, 0x41, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43,
	0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x10, 0x01, 0x42, 0x29, 0x5a, 0x27, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x6d, 0x61, 0x68, 0x38, 0x38,
	0x38, 0x2f, 0x67, 0x6f, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x2f, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tesla_proto_rawDescOnce sync.Once
	file_tesla_proto_rawDescData = file_tesla_proto_rawDesc
)

func file_tesla_proto_rawDescGZIP() []byte {
	file_tesla_proto_rawDescOnce.Do(func() {
		file_tesla_proto_rawDescData = protoimpl.X.CompressGZIP(file_tesla_proto_rawDescData)
	})
	return file_tesla_proto_rawDescData
}

var file_tesla_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_tesla_proto_msgTypes = make([]protoimpl.MessageInfo, 95)
var file_tesla_proto_goTypes = []interface{}{
	(ExternalAuthType)(0),                                       // 0: teslapower.ExternalAuthType
	(DeliveryChannel)(0),                                        // 1: teslapower.DeliveryChannel
	(TeslaService)(0),                                           // 2: teslapower.TeslaService
	(*ExternalAuth)(nil),                                        // 3: teslapower.ExternalAuth
	(*Participant)(nil),                                         // 4: teslapower.Participant
	(*EcuId)(nil),                                               // 5: teslapower.EcuId
	(*Din)(nil),                                                 // 6: teslapower.Din
	(*FirmwareVersion)(nil),                                     // 7: teslapower.FirmwareVersion
	(*AccumulatedEnergy)(nil),                                   // 8: teslapower.AccumulatedEnergy
	(*InstACMeasurement)(nil),                                   // 9: teslapower.InstACMeasurement
	(*InstDCMeasurement)(nil),                                   // 10: teslapower.InstDCMeasurement
	(*GridComplianceStatus)(nil),                                // 11: teslapower.GridComplianceStatus
	(*NetworkInterfaceIPv4Config)(nil),                          // 12: teslapower.NetworkInterfaceIPv4Config
	(*Rssi)(nil),                                                // 13: teslapower.Rssi
	(*NetworkConnectivityStatus)(nil),                           // 14: teslapower.NetworkConnectivityStatus
	(*NetworkInterface)(nil),                                    // 15: teslapower.NetworkInterface
	(*WifiPassword)(nil),                                        // 16: teslapower.WifiPassword
	(*EncryptedMessage)(nil),                                    // 17: teslapower.EncryptedMessage
	(*WifiConfig)(nil),                                          // 18: teslapower.WifiConfig
	(*WifiNetwork)(nil),                                         // 19: teslapower.WifiNetwork
	(*SystemUpdate)(nil),                                        // 20: teslapower.SystemUpdate
	(*ErrorResponse)(nil),                                       // 21: teslapower.ErrorResponse
	(*CommonAPIGetSystemInfoRequest)(nil),                       // 22: teslapower.CommonAPIGetSystemInfoRequest
	(*CommonAPIGetSystemInfoResponse)(nil),                      // 23: teslapower.CommonAPIGetSystemInfoResponse
	(*CommonAPISetLocalSiteConfigRequest)(nil),                  // 24: teslapower.CommonAPISetLocalSiteConfigRequest
	(*CommonAPISetLocalSiteConfigResponse)(nil),                 // 25: teslapower.CommonAPISetLocalSiteConfigResponse
	(*CommonAPICheckForUpdateRequest)(nil),                      // 26: teslapower.CommonAPICheckForUpdateRequest
	(*CommonAPICheckForUpdateResponse)(nil),                     // 27: teslapower.CommonAPICheckForUpdateResponse
	(*CommonAPIClearUpdateRequest)(nil),                         // 28: teslapower.CommonAPIClearUpdateRequest
	(*CommonAPIClearUpdateResponse)(nil),                        // 29: teslapower.CommonAPIClearUpdateResponse
	(*CommonAPIPerformUpdateRequest)(nil),                       // 30: teslapower.CommonAPIPerformUpdateRequest
	(*CommonAPIPerformUpdateResponse)(nil),                      // 31: teslapower.CommonAPIPerformUpdateResponse
	(*CommonAPIFactoryResetRequest)(nil),                        // 32: teslapower.CommonAPIFactoryResetRequest
	(*CommonAPIFactoryResetResponse)(nil),                       // 33: teslapower.CommonAPIFactoryResetResponse
	(*CommonAPIGetNetworkingStatusRequest)(nil),                 // 34: teslapower.CommonAPIGetNetworkingStatusRequest
	(*CommonAPIGetNetworkingStatusResponse)(nil),                // 35: teslapower.CommonAPIGetNetworkingStatusResponse
	(*CommonAPIWifiScanRequest)(nil),                            // 36: teslapower.CommonAPIWifiScanRequest
	(*CommonAPIWifiScanResponse)(nil),                           // 37: teslapower.CommonAPIWifiScanResponse
	(*CommonAPIConfigureWifiRequest)(nil),                       // 38: teslapower.CommonAPIConfigureWifiRequest
	(*CommonAPIConfigureWifiResponse)(nil),                      // 39: teslapower.CommonAPIConfigureWifiResponse
	(*CommonAPIConfigureWifiWithEncryptedPasswordRequest)(nil),  // 40: teslapower.CommonAPIConfigureWifiWithEncryptedPasswordRequest
	(*CommonAPIConfigureWifiWithEncryptedPasswordResponse)(nil), // 41: teslapower.CommonAPIConfigureWifiWithEncryptedPasswordResponse
	(*CommonAPIDeviceCertRequest)(nil),                          // 42: teslapower.CommonAPIDeviceCertRequest
	(*CommonAPIDeviceCertResponse)(nil),                         // 43: teslapower.CommonAPIDeviceCertResponse
	(*AlertLog)(nil),                                            // 44: teslapower.AlertLog
	(*AlertMatrix)(nil),                                         // 45: teslapower.AlertMatrix
	(*EnergySiteNetDevice)(nil),                                 // 46: teslapower.EnergySiteNetDevice
	(*EnergySiteNetRecentlyAddedDevice)(nil),                    // 47: teslapower.EnergySiteNetRecentlyAddedDevice
	(*EnergySiteNetRecentlyRemovedDevice)(nil),                  // 48: teslapower.EnergySiteNetRecentlyRemovedDevice
	(*EnergySiteNetConfig)(nil),                                 // 49: teslapower.EnergySiteNetConfig
	(*EnergySiteNetAPIAddDeviceRequest)(nil),                    // 50: teslapower.EnergySiteNetAPIAddDeviceRequest
	(*EnergySiteNetAPIAddDeviceResponse)(nil),                   // 51: teslapower.EnergySiteNetAPIAddDeviceResponse
	(*EnergySiteNetAPIRemoveDeviceRequest)(nil),                 // 52: teslapower.EnergySiteNetAPIRemoveDeviceRequest
	(*EnergySiteNetAPIRemoveDeviceResponse)(nil),                // 53: teslapower.EnergySiteNetAPIRemoveDeviceResponse
	(*EnergySiteNetAPIGetConfigRequest)(nil),                    // 54: teslapower.EnergySiteNetAPIGetConfigRequest
	(*EnergySiteNetAPIGetConfigResponse)(nil),                   // 55: teslapower.EnergySiteNetAPIGetConfigResponse
	(*DeviceVital)(nil),                                         // 56: teslapower.DeviceVital
	(*StringValue)(nil),                                         // 57: teslapower.StringValue
	(*UInt32Value)(nil),                                         // 58: teslapower.UInt32Value
	(*Int32Value)(nil),                                          // 59: teslapower.Int32Value
	(*UInt64Value)(nil),                                         // 60: teslapower.UInt64Value
	(*FloatValue)(nil),                                          // 61: teslapower.FloatValue
	(*ConnectionParameters)(nil),                                // 62: teslapower.ConnectionParameters
	(*TeslaHardwareId)(nil),                                     // 63: teslapower.TeslaHardwareId
	(*TeslaEnergyEcuAttributes)(nil),                            // 64: teslapower.TeslaEnergyEcuAttributes
	(*GeneratorAttributes)(nil),                                 // 65: teslapower.GeneratorAttributes
	(*PVInverterAttributes)(nil),                                // 66: teslapower.PVInverterAttributes
	(*MeterAttributes)(nil),                                     // 67: teslapower.MeterAttributes
	(*DeviceAttributes)(nil),                                    // 68: teslapower.DeviceAttributes
	(*Device)(nil),                                              // 69: teslapower.Device
	(*SiteControllerConnectedDevice)(nil),                       // 70: teslapower.SiteControllerConnectedDevice
	(*SiteControllerConnectedDeviceWithVitals)(nil),             // 71: teslapower.SiteControllerConnectedDeviceWithVitals
	(*DevicesWithVitals)(nil),                                   // 72: teslapower.DevicesWithVitals
	(*SiteControllerConnectedDeviceStore)(nil),                  // 73: teslapower.SiteControllerConnectedDeviceStore
	(*BatterySystemCapabilities)(nil),                           // 74: teslapower.BatterySystemCapabilities
	(*Status)(nil),                                              // 75: teslapower.Status
	(*Manifest)(nil),                                            // 76: teslapower.Manifest
	(*MessageEnvelope)(nil),                                     // 77: teslapower.MessageEnvelope
	(*CommonMessages)(nil),                                      // 78: teslapower.CommonMessages
	(*TEGMessages)(nil),                                         // 79: teslapower.TEGMessages
	(*TEGSettings)(nil),                                         // 80: teslapower.TEGSettings
	(*TEGAPIGetConfigRequest)(nil),                              // 81: teslapower.TEGAPIGetConfigRequest
	(*TEGAPIGetConfigResponse)(nil),                             // 82: teslapower.TEGAPIGetConfigResponse
	(*TEGAPITriggerIslandingBlackStartRequest)(nil),             // 83: teslapower.TEGAPITriggerIslandingBlackStartRequest
	(*TEGAPITriggerIslandingBlackStartResponse)(nil),            // 84: teslapower.TEGAPITriggerIslandingBlackStartResponse
	(*TEGAPISetIslandModeRequest)(nil),                          // 85: teslapower.TEGAPISetIslandModeRequest
	(*TEGAPISetIslandModeResponse)(nil),                         // 86: teslapower.TEGAPISetIslandModeResponse
	(*TEGAPITriggerAssetManifestUploadRequest)(nil),             // 87: teslapower.TEGAPITriggerAssetManifestUploadRequest
	(*TEGAPITriggerAssetManifestUploadResponse)(nil),            // 88: teslapower.TEGAPITriggerAssetManifestUploadResponse
	(*EnergySiteNetMessages)(nil),                               // 89: teslapower.EnergySiteNetMessages
	(*LocalAuthAPIRequiredFactorsRequest)(nil),                  // 90: teslapower.LocalAuthAPIRequiredFactorsRequest
	(*LocalAuthAPIRequiredFactorsResponse)(nil),                 // 91: teslapower.LocalAuthAPIRequiredFactorsResponse
	(*LocalAuthAPILoginRequest)(nil),                            // 92: teslapower.LocalAuthAPILoginRequest
	(*LocalAuthAPILoginResponse)(nil),                           // 93: teslapower.LocalAuthAPILoginResponse
	(*LocalAuthAPILogoutRequest)(nil),                           // 94: teslapower.LocalAuthAPILogoutRequest
	(*LocalAuthAPILogoutResponse)(nil),                          // 95: teslapower.LocalAuthAPILogoutResponse
	(*LocalAuthAPICheckAuthStatusRequest)(nil),                  // 96: teslapower.LocalAuthAPICheckAuthStatusRequest
	(*LocalAuthAPICheckAuthStatusResponse)(nil),                 // 97: teslapower.LocalAuthAPICheckAuthStatusResponse
	(*timestamppb.Timestamp)(nil),                               // 98: google.protobuf.Timestamp
	(*anypb.Any)(nil),                                           // 99: google.protobuf.Any
}
var file_tesla_proto_depIdxs = []int32{
	0,   // 0: teslapower.ExternalAuth.type:type_name -> teslapower.ExternalAuthType
	60,  // 1: teslapower.AccumulatedEnergy.periodS:type_name -> teslapower.UInt64Value
	61,  // 2: teslapower.InstACMeasurement.currentArms:type_name -> teslapower.FloatValue
	61,  // 3: teslapower.InstACMeasurement.realPowerW:type_name -> teslapower.FloatValue
	61,  // 4: teslapower.InstACMeasurement.reactivePowerVar:type_name -> teslapower.FloatValue
	61,  // 5: teslapower.InstACMeasurement.apparentPowerVa:type_name -> teslapower.FloatValue
	61,  // 6: teslapower.InstDCMeasurement.currentA:type_name -> teslapower.FloatValue
	58,  // 7: teslapower.GridComplianceStatus.qualifyingTimeRemainingS:type_name -> teslapower.UInt32Value
	58,  // 8: teslapower.Rssi.signalStrengthPercent:type_name -> teslapower.UInt32Value
	13,  // 9: teslapower.NetworkConnectivityStatus.rssi:type_name -> teslapower.Rssi
	59,  // 10: teslapower.NetworkConnectivityStatus.snr:type_name -> teslapower.Int32Value
	12,  // 11: teslapower.NetworkInterface.ipv4Config:type_name -> teslapower.NetworkInterfaceIPv4Config
	14,  // 12: teslapower.NetworkInterface.connectivityStatus:type_name -> teslapower.NetworkConnectivityStatus
	13,  // 13: teslapower.WifiNetwork.rssi:type_name -> teslapower.Rssi
	7,   // 14: teslapower.SystemUpdate.serverStagedVersion:type_name -> teslapower.FirmwareVersion
	75,  // 15: teslapower.ErrorResponse.status:type_name -> teslapower.Status
	5,   // 16: teslapower.CommonAPIGetSystemInfoResponse.deviceId:type_name -> teslapower.EcuId
	7,   // 17: teslapower.CommonAPIGetSystemInfoResponse.firmwareVersion:type_name -> teslapower.FirmwareVersion
	20,  // 18: teslapower.CommonAPIGetSystemInfoResponse.systemUpdate:type_name -> teslapower.SystemUpdate
	18,  // 19: teslapower.CommonAPIGetNetworkingStatusResponse.wifiConfig:type_name -> teslapower.WifiConfig
	15,  // 20: teslapower.CommonAPIGetNetworkingStatusResponse.wifi:type_name -> teslapower.NetworkInterface
	15,  // 21: teslapower.CommonAPIGetNetworkingStatusResponse.eth:type_name -> teslapower.NetworkInterface
	15,  // 22: teslapower.CommonAPIGetNetworkingStatusResponse.gsm:type_name -> teslapower.NetworkInterface
	19,  // 23: teslapower.CommonAPIWifiScanResponse.wifiNetworks:type_name -> teslapower.WifiNetwork
	18,  // 24: teslapower.CommonAPIConfigureWifiRequest.wifiConfig:type_name -> teslapower.WifiConfig
	18,  // 25: teslapower.CommonAPIConfigureWifiResponse.wifiConfig:type_name -> teslapower.WifiConfig
	15,  // 26: teslapower.CommonAPIConfigureWifiResponse.wifi:type_name -> teslapower.NetworkInterface
	18,  // 27: teslapower.CommonAPIConfigureWifiWithEncryptedPasswordRequest.wifiConfig:type_name -> teslapower.WifiConfig
	17,  // 28: teslapower.CommonAPIConfigureWifiWithEncryptedPasswordRequest.encryptedPassword:type_name -> teslapower.EncryptedMessage
	18,  // 29: teslapower.CommonAPIConfigureWifiWithEncryptedPasswordResponse.wifiConfig:type_name -> teslapower.WifiConfig
	15,  // 30: teslapower.CommonAPIConfigureWifiWithEncryptedPasswordResponse.wifi:type_name -> teslapower.NetworkInterface
	6,   // 31: teslapower.EnergySiteNetDevice.din:type_name -> teslapower.Din
	18,  // 32: teslapower.EnergySiteNetDevice.wifiApConfig:type_name -> teslapower.WifiConfig
	6,   // 33: teslapower.EnergySiteNetRecentlyAddedDevice.din:type_name -> teslapower.Din
	6,   // 34: teslapower.EnergySiteNetRecentlyRemovedDevice.din:type_name -> teslapower.Din
	46,  // 35: teslapower.EnergySiteNetConfig.devices:type_name -> teslapower.EnergySiteNetDevice
	47,  // 36: teslapower.EnergySiteNetConfig.recentlyAdded:type_name -> teslapower.EnergySiteNetRecentlyAddedDevice
	48,  // 37: teslapower.EnergySiteNetConfig.recentlyRemoved:type_name -> teslapower.EnergySiteNetRecentlyRemovedDevice
	46,  // 38: teslapower.EnergySiteNetAPIAddDeviceRequest.device:type_name -> teslapower.EnergySiteNetDevice
	47,  // 39: teslapower.EnergySiteNetAPIAddDeviceResponse.recentlyAdded:type_name -> teslapower.EnergySiteNetRecentlyAddedDevice
	6,   // 40: teslapower.EnergySiteNetAPIRemoveDeviceRequest.din:type_name -> teslapower.Din
	48,  // 41: teslapower.EnergySiteNetAPIRemoveDeviceResponse.recentlyRemoved:type_name -> teslapower.EnergySiteNetRecentlyRemovedDevice
	49,  // 42: teslapower.EnergySiteNetAPIGetConfigResponse.config:type_name -> teslapower.EnergySiteNetConfig
	57,  // 43: teslapower.ConnectionParameters.ipAddress:type_name -> teslapower.StringValue
	57,  // 44: teslapower.ConnectionParameters.serialPort:type_name -> teslapower.StringValue
	58,  // 45: teslapower.TeslaHardwareId.pcbaId:type_name -> teslapower.UInt32Value
	58,  // 46: teslapower.TeslaHardwareId.assemblyId:type_name -> teslapower.UInt32Value
	58,  // 47: teslapower.TeslaHardwareId.usageId:type_name -> teslapower.UInt32Value
	63,  // 48: teslapower.TeslaEnergyEcuAttributes.hardwareId:type_name -> teslapower.TeslaHardwareId
	66,  // 49: teslapower.TeslaEnergyEcuAttributes.pvInverterAttributes:type_name -> teslapower.PVInverterAttributes
	67,  // 50: teslapower.TeslaEnergyEcuAttributes.meterAttributes:type_name -> teslapower.MeterAttributes
	64,  // 51: teslapower.DeviceAttributes.teslaEnergyEcuAttributes:type_name -> teslapower.TeslaEnergyEcuAttributes
	65,  // 52: teslapower.DeviceAttributes.generatorAttributes:type_name -> teslapower.GeneratorAttributes
	66,  // 53: teslapower.DeviceAttributes.pvInverterAttributes:type_name -> teslapower.PVInverterAttributes
	67,  // 54: teslapower.DeviceAttributes.meterAttributes:type_name -> teslapower.MeterAttributes
	57,  // 55: teslapower.Device.din:type_name -> teslapower.StringValue
	57,  // 56: teslapower.Device.partNumber:type_name -> teslapower.StringValue
	57,  // 57: teslapower.Device.serialNumber:type_name -> teslapower.StringValue
	57,  // 58: teslapower.Device.manufacturer:type_name -> teslapower.StringValue
	57,  // 59: teslapower.Device.siteLabel:type_name -> teslapower.StringValue
	57,  // 60: teslapower.Device.componentParentDin:type_name -> teslapower.StringValue
	57,  // 61: teslapower.Device.firmwareVersion:type_name -> teslapower.StringValue
	98,  // 62: teslapower.Device.firstCommunicationTime:type_name -> google.protobuf.Timestamp
	98,  // 63: teslapower.Device.lastCommunicationTime:type_name -> google.protobuf.Timestamp
	62,  // 64: teslapower.Device.connectionParameters:type_name -> teslapower.ConnectionParameters
	68,  // 65: teslapower.Device.deviceAttributes:type_name -> teslapower.DeviceAttributes
	69,  // 66: teslapower.SiteControllerConnectedDevice.device:type_name -> teslapower.Device
	70,  // 67: teslapower.SiteControllerConnectedDeviceWithVitals.device:type_name -> teslapower.SiteControllerConnectedDevice
	56,  // 68: teslapower.SiteControllerConnectedDeviceWithVitals.vitals:type_name -> teslapower.DeviceVital
	71,  // 69: teslapower.DevicesWithVitals.devices:type_name -> teslapower.SiteControllerConnectedDeviceWithVitals
	70,  // 70: teslapower.SiteControllerConnectedDeviceStore.siteControllerConnectedDevice:type_name -> teslapower.SiteControllerConnectedDevice
	99,  // 71: teslapower.Status.details:type_name -> google.protobuf.Any
	98,  // 72: teslapower.Manifest.generatedTime:type_name -> google.protobuf.Timestamp
	69,  // 73: teslapower.Manifest.device:type_name -> teslapower.Device
	74,  // 74: teslapower.Manifest.batterySystemCapabilities:type_name -> teslapower.BatterySystemCapabilities
	57,  // 75: teslapower.Manifest.gatewayFirmwareVersion:type_name -> teslapower.StringValue
	4,   // 76: teslapower.MessageEnvelope.sender:type_name -> teslapower.Participant
	4,   // 77: teslapower.MessageEnvelope.recipient:type_name -> teslapower.Participant
	78,  // 78: teslapower.MessageEnvelope.common:type_name -> teslapower.CommonMessages
	79,  // 79: teslapower.MessageEnvelope.teg:type_name -> teslapower.TEGMessages
	89,  // 80: teslapower.MessageEnvelope.energysitenet:type_name -> teslapower.EnergySiteNetMessages
	22,  // 81: teslapower.CommonMessages.getSystemInfoRequest:type_name -> teslapower.CommonAPIGetSystemInfoRequest
	23,  // 82: teslapower.CommonMessages.getSystemInfoResponse:type_name -> teslapower.CommonAPIGetSystemInfoResponse
	24,  // 83: teslapower.CommonMessages.setLocalSiteConfigRequest:type_name -> teslapower.CommonAPISetLocalSiteConfigRequest
	25,  // 84: teslapower.CommonMessages.setLocalSiteConfigResponse:type_name -> teslapower.CommonAPISetLocalSiteConfigResponse
	30,  // 85: teslapower.CommonMessages.performUpdateRequest:type_name -> teslapower.CommonAPIPerformUpdateRequest
	31,  // 86: teslapower.CommonMessages.performUpdateResponse:type_name -> teslapower.CommonAPIPerformUpdateResponse
	32,  // 87: teslapower.CommonMessages.factoryResetRequest:type_name -> teslapower.CommonAPIFactoryResetRequest
	33,  // 88: teslapower.CommonMessages.factoryResetResponse:type_name -> teslapower.CommonAPIFactoryResetResponse
	36,  // 89: teslapower.CommonMessages.wifiScanRequest:type_name -> teslapower.CommonAPIWifiScanRequest
	37,  // 90: teslapower.CommonMessages.wifiScanResponse:type_name -> teslapower.CommonAPIWifiScanResponse
	38,  // 91: teslapower.CommonMessages.configureWifiRequest:type_name -> teslapower.CommonAPIConfigureWifiRequest
	39,  // 92: teslapower.CommonMessages.configureWifiResponse:type_name -> teslapower.CommonAPIConfigureWifiResponse
	26,  // 93: teslapower.CommonMessages.checkForUpdateRequest:type_name -> teslapower.CommonAPICheckForUpdateRequest
	27,  // 94: teslapower.CommonMessages.checkForUpdateResponse:type_name -> teslapower.CommonAPICheckForUpdateResponse
	28,  // 95: teslapower.CommonMessages.clearUpdateRequest:type_name -> teslapower.CommonAPIClearUpdateRequest
	29,  // 96: teslapower.CommonMessages.clearUpdateResponse:type_name -> teslapower.CommonAPIClearUpdateResponse
	42,  // 97: teslapower.CommonMessages.deviceCertRequest:type_name -> teslapower.CommonAPIDeviceCertRequest
	43,  // 98: teslapower.CommonMessages.deviceCertResponse:type_name -> teslapower.CommonAPIDeviceCertResponse
	40,  // 99: teslapower.CommonMessages.configureWifiWithEncryptedPasswordRequest:type_name -> teslapower.CommonAPIConfigureWifiWithEncryptedPasswordRequest
	41,  // 100: teslapower.CommonMessages.configureWifiWithEncryptedPasswordResponse:type_name -> teslapower.CommonAPIConfigureWifiWithEncryptedPasswordResponse
	34,  // 101: teslapower.CommonMessages.getNetworkingStatusRequest:type_name -> teslapower.CommonAPIGetNetworkingStatusRequest
	35,  // 102: teslapower.CommonMessages.getNetworkingStatusResponse:type_name -> teslapower.CommonAPIGetNetworkingStatusResponse
	81,  // 103: teslapower.TEGMessages.getConfigRequest:type_name -> teslapower.TEGAPIGetConfigRequest
	82,  // 104: teslapower.TEGMessages.getConfigResponse:type_name -> teslapower.TEGAPIGetConfigResponse
	85,  // 105: teslapower.TEGMessages.setIslandModeRequest:type_name -> teslapower.TEGAPISetIslandModeRequest
	86,  // 106: teslapower.TEGMessages.setIslandModeResponse:type_name -> teslapower.TEGAPISetIslandModeResponse
	83,  // 107: teslapower.TEGMessages.triggerIslandingBlackStartRequest:type_name -> teslapower.TEGAPITriggerIslandingBlackStartRequest
	84,  // 108: teslapower.TEGMessages.triggerIslandingBlackStartResponse:type_name -> teslapower.TEGAPITriggerIslandingBlackStartResponse
	87,  // 109: teslapower.TEGMessages.triggerAssetManifestUploadRequest:type_name -> teslapower.TEGAPITriggerAssetManifestUploadRequest
	88,  // 110: teslapower.TEGMessages.triggerAssetManifestUploadResponse:type_name -> teslapower.TEGAPITriggerAssetManifestUploadResponse
	80,  // 111: teslapower.TEGAPIGetConfigResponse.settings:type_name -> teslapower.TEGSettings
	18,  // 112: teslapower.TEGAPIGetConfigResponse.wifiConfig:type_name -> teslapower.WifiConfig
	15,  // 113: teslapower.TEGAPIGetConfigResponse.wifi:type_name -> teslapower.NetworkInterface
	15,  // 114: teslapower.TEGAPIGetConfigResponse.eth:type_name -> teslapower.NetworkInterface
	15,  // 115: teslapower.TEGAPIGetConfigResponse.gsm:type_name -> teslapower.NetworkInterface
	50,  // 116: teslapower.EnergySiteNetMessages.addDeviceRequest:type_name -> teslapower.EnergySiteNetAPIAddDeviceRequest
	51,  // 117: teslapower.EnergySiteNetMessages.addDeviceResponse:type_name -> teslapower.EnergySiteNetAPIAddDeviceResponse
	52,  // 118: teslapower.EnergySiteNetMessages.removeDeviceRequest:type_name -> teslapower.EnergySiteNetAPIRemoveDeviceRequest
	53,  // 119: teslapower.EnergySiteNetMessages.removeDeviceResponse:type_name -> teslapower.EnergySiteNetAPIRemoveDeviceResponse
	54,  // 120: teslapower.EnergySiteNetMessages.getConfigRequest:type_name -> teslapower.EnergySiteNetAPIGetConfigRequest
	55,  // 121: teslapower.EnergySiteNetMessages.getConfigResponse:type_name -> teslapower.EnergySiteNetAPIGetConfigResponse
	16,  // 122: teslapower.LocalAuthAPILoginRequest.password:type_name -> teslapower.WifiPassword
	123, // [123:123] is the sub-list for method output_type
	123, // [123:123] is the sub-list for method input_type
	123, // [123:123] is the sub-list for extension type_name
	123, // [123:123] is the sub-list for extension extendee
	0,   // [0:123] is the sub-list for field type_name
}

func init() { file_tesla_proto_init() }
func file_tesla_proto_init() {
	if File_tesla_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tesla_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Participant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EcuId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Din); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirmwareVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccumulatedEnergy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstACMeasurement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstDCMeasurement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GridComplianceStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkInterfaceIPv4Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rssi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkConnectivityStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkInterface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiPassword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiNetwork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonAPIGetSystemInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonAPIGetSystemInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonAPISetLocalSiteConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonAPISetLocalSiteConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonAPICheckForUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonAPICheckForUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonAPIClearUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonAPIClearUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonAPIPerformUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonAPIPerformUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonAPIFactoryResetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonAPIFactoryResetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonAPIGetNetworkingStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonAPIGetNetworkingStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonAPIWifiScanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonAPIWifiScanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonAPIConfigureWifiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonAPIConfigureWifiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonAPIConfigureWifiWithEncryptedPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonAPIConfigureWifiWithEncryptedPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonAPIDeviceCertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonAPIDeviceCertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertMatrix); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnergySiteNetDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnergySiteNetRecentlyAddedDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnergySiteNetRecentlyRemovedDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnergySiteNetConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnergySiteNetAPIAddDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnergySiteNetAPIAddDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnergySiteNetAPIRemoveDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnergySiteNetAPIRemoveDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnergySiteNetAPIGetConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnergySiteNetAPIGetConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceVital); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UInt32Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Int32Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UInt64Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FloatValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeslaHardwareId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeslaEnergyEcuAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneratorAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PVInverterAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeterAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteControllerConnectedDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteControllerConnectedDeviceWithVitals); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DevicesWithVitals); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteControllerConnectedDeviceStore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatterySystemCapabilities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Manifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEnvelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonMessages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TEGMessages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TEGSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TEGAPIGetConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TEGAPIGetConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TEGAPITriggerIslandingBlackStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TEGAPITriggerIslandingBlackStartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TEGAPISetIslandModeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TEGAPISetIslandModeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TEGAPITriggerAssetManifestUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TEGAPITriggerAssetManifestUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnergySiteNetMessages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalAuthAPIRequiredFactorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalAuthAPIRequiredFactorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalAuthAPILoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalAuthAPILoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalAuthAPILogoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalAuthAPILogoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalAuthAPICheckAuthStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tesla_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalAuthAPICheckAuthStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tesla_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Participant_Din)(nil),
		(*Participant_TeslaService)(nil),
		(*Participant_Local)(nil),
		(*Participant_AuthorizedClient)(nil),
	}
	file_tesla_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[32].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[35].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[36].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[37].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[38].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[43].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[44].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[45].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[53].OneofWrappers = []interface{}{
		(*DeviceVital_IntValue)(nil),
		(*DeviceVital_FloatValue)(nil),
		(*DeviceVital_StringValue)(nil),
		(*DeviceVital_BoolValue)(nil),
	}
	file_tesla_proto_msgTypes[59].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[60].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[61].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[65].OneofWrappers = []interface{}{
		(*DeviceAttributes_TeslaEnergyEcuAttributes)(nil),
		(*DeviceAttributes_GeneratorAttributes)(nil),
		(*DeviceAttributes_PvInverterAttributes)(nil),
		(*DeviceAttributes_MeterAttributes)(nil),
	}
	file_tesla_proto_msgTypes[66].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[67].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[73].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[74].OneofWrappers = []interface{}{
		(*MessageEnvelope_Common)(nil),
		(*MessageEnvelope_Teg)(nil),
		(*MessageEnvelope_Energysitenet)(nil),
	}
	file_tesla_proto_msgTypes[75].OneofWrappers = []interface{}{
		(*CommonMessages_GetSystemInfoRequest)(nil),
		(*CommonMessages_GetSystemInfoResponse)(nil),
		(*CommonMessages_SetLocalSiteConfigRequest)(nil),
		(*CommonMessages_SetLocalSiteConfigResponse)(nil),
		(*CommonMessages_PerformUpdateRequest)(nil),
		(*CommonMessages_PerformUpdateResponse)(nil),
		(*CommonMessages_FactoryResetRequest)(nil),
		(*CommonMessages_FactoryResetResponse)(nil),
		(*CommonMessages_WifiScanRequest)(nil),
		(*CommonMessages_WifiScanResponse)(nil),
		(*CommonMessages_ConfigureWifiRequest)(nil),
		(*CommonMessages_ConfigureWifiResponse)(nil),
		(*CommonMessages_CheckForUpdateRequest)(nil),
		(*CommonMessages_CheckForUpdateResponse)(nil),
		(*CommonMessages_ClearUpdateRequest)(nil),
		(*CommonMessages_ClearUpdateResponse)(nil),
		(*CommonMessages_DeviceCertRequest)(nil),
		(*CommonMessages_DeviceCertResponse)(nil),
		(*CommonMessages_ConfigureWifiWithEncryptedPasswordRequest)(nil),
		(*CommonMessages_ConfigureWifiWithEncryptedPasswordResponse)(nil),
		(*CommonMessages_GetNetworkingStatusRequest)(nil),
		(*CommonMessages_GetNetworkingStatusResponse)(nil),
	}
	file_tesla_proto_msgTypes[76].OneofWrappers = []interface{}{
		(*TEGMessages_GetConfigRequest)(nil),
		(*TEGMessages_GetConfigResponse)(nil),
		(*TEGMessages_SetIslandModeRequest)(nil),
		(*TEGMessages_SetIslandModeResponse)(nil),
		(*TEGMessages_TriggerIslandingBlackStartRequest)(nil),
		(*TEGMessages_TriggerIslandingBlackStartResponse)(nil),
		(*TEGMessages_TriggerAssetManifestUploadRequest)(nil),
		(*TEGMessages_TriggerAssetManifestUploadResponse)(nil),
	}
	file_tesla_proto_msgTypes[79].OneofWrappers = []interface{}{}
	file_tesla_proto_msgTypes[86].OneofWrappers = []interface{}{
		(*EnergySiteNetMessages_AddDeviceRequest)(nil),
		(*EnergySiteNetMessages_AddDeviceResponse)(nil),
		(*EnergySiteNetMessages_RemoveDeviceRequest)(nil),
		(*EnergySiteNetMessages_RemoveDeviceResponse)(nil),
		(*EnergySiteNetMessages_GetConfigRequest)(nil),
		(*EnergySiteNetMessages_GetConfigResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tesla_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   95,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tesla_proto_goTypes,
		DependencyIndexes: file_tesla_proto_depIdxs,
		EnumInfos:         file_tesla_proto_enumTypes,
		MessageInfos:      file_tesla_proto_msgTypes,
	}.Build()
	File_tesla_proto = out.File
	file_tesla_proto_rawDesc = nil
	file_tesla_proto_goTypes = nil
	file_tesla_proto_depIdxs = nil
}
